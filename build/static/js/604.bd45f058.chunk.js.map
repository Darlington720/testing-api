{"version":3,"file":"static/js/604.bd45f058.chunk.js","mappings":"6HAkBA,IAhBA,WAA6C,IAAlBA,EAAQ,uDAAG,IAClC,GAA8BC,EAAAA,EAAAA,UAAS,IAAG,eAAnCC,EAAO,KAAEC,EAAU,KAY1B,OAVAC,EAAAA,EAAAA,YAAU,WACN,GAAIF,EAAS,CACT,IAAIG,EAAUC,YAAW,kBAAMH,EAAW,GAAG,GAAEH,GAC/C,OAAO,WACHO,aAAaF,EACjB,CACJ,CAEJ,GAAG,CAACH,IAEG,CAACA,EAASC,EACrB,C,oLCDMK,EAAmBC,EAAAA,KAAaC,MAAM,CACxCC,SAAUF,EAAAA,KAAaG,SAAS,+BAChCC,SAAUJ,EAAAA,KAAaG,SAAS,8BAChCE,WAAYL,EAAAA,OA8GhB,EA3GmB,SAACM,GAChB,MAKIA,EAJAC,cAAAA,OAAa,OAAQ,EACrBC,EAGAF,EAHAE,UAAU,EAGVF,EAFAG,kBAAAA,OAAiB,MAAG,mBAAkB,IAEtCH,EADAI,UAAAA,OAAS,MAAG,WAAU,EAG1B,GAA8BC,EAAAA,EAAAA,KAAmB,eAA1ClB,EAAO,KAAEC,EAAU,KAElBkB,GAAWC,EAAAA,EAAAA,KAAXD,OAEFE,EAAQ,yCAAG,WAAOC,EAAQC,GAAa,gFAEtB,OADXd,EAAuBa,EAAvBb,SAAUE,EAAaW,EAAbX,SAClBY,GAAc,GAAK,SAEEJ,EAAO,CAAEV,SAAAA,EAAUE,SAAAA,IAAW,OAE7B,YAFhBa,EAAM,QAEDC,QACPxB,EAAWuB,EAAOxB,SAGtBuB,GAAc,GAAM,2CACvB,gBAXa,wCAad,OACI,iBAAKR,UAAWA,EAAU,UACrBf,IACG,SAAC,KAAK,CAACe,UAAU,OAAOW,KAAK,SAASC,UAAQ,WACzC3B,KAGT,SAAC,KACG,CACA4B,cAAe,CACXnB,SAAU,QACVE,SAAU,SACVC,YAAY,GAEhBN,iBAAkBA,EAClBuB,SAAU,SAACP,EAAO,GAAwB,IAArBC,EAAa,EAAbA,cACZT,EAGDS,GAAc,GAFdF,EAASC,EAAQC,EAIzB,EAAE,SAED,gBAAGO,EAAO,EAAPA,QAASC,EAAM,EAANA,OAAQC,EAAY,EAAZA,aAAY,OAC7B,SAAC,KAAI,WACD,UAAC,KAAa,YACV,SAAC,KAAQ,CACLC,MAAM,YACNC,QAASH,EAAOtB,UAAYqB,EAAQrB,SACpC0B,aAAcJ,EAAOtB,SAAS,UAE9B,SAAC,KAAK,CACFiB,KAAK,OACLU,aAAa,MACbC,KAAK,WACLC,YAAY,YACZC,UAAWC,EAAAA,QAGnB,SAAC,KAAQ,CACLP,MAAM,WACNC,QAASH,EAAOpB,UAAYmB,EAAQnB,SACpCwB,aAAcJ,EAAOpB,SAAS,UAE9B,SAAC,KAAK,CACFyB,aAAa,MACbC,KAAK,WACLC,YAAY,WACZC,UAAWE,EAAAA,QAGnB,iBAAK1B,UAAU,4BAA2B,WACtC,SAAC,KAAK,CACFA,UAAU,OACVsB,KAAK,aACLE,UAAWG,EAAAA,GACXC,SAAS,iBAEb,SAAC,KAAU,CAACC,GAAI5B,EAAkB,kCAItC,SAAC,KAAM,CACH6B,OAAK,EACLC,QAASd,EACTe,QAAQ,QACRrB,KAAK,SAAQ,SAEZM,EAAe,gBAAkB,aAEtC,iBAAKjB,UAAU,mBAAkB,WAC7B,2DACA,SAAC,KAAU,CAAC6B,GAAI3B,EAAU,4BAG/B,MAK3B,EC/GA,EAZe,WACX,OACI,iCACI,iBAAKF,UAAU,OAAM,WACjB,eAAIA,UAAU,OAAM,4BACpB,yEAEJ,SAAC,EAAU,CAACD,eAAe,MAGvC,C","sources":["utils/hooks/useTimeOutMessage.js","views/auth/SignIn/SignInForm.js","views/auth/SignIn/index.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nfunction useTimeOutMessage(interval = 3000) {\r\n    const [message, setMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (message) {\r\n            let timeout = setTimeout(() => setMessage(''), interval)\r\n            return () => {\r\n                clearTimeout(timeout)\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [message])\r\n\r\n    return [message, setMessage]\r\n}\r\n\r\nexport default useTimeOutMessage\r\n","import React from 'react'\r\nimport {\r\n    Input,\r\n    Button,\r\n    Checkbox,\r\n    FormItem,\r\n    FormContainer,\r\n    Alert,\r\n} from 'components/ui'\r\nimport { PasswordInput, ActionLink } from 'components/shared'\r\nimport useTimeOutMessage from 'utils/hooks/useTimeOutMessage'\r\nimport { Field, Form, Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport useAuth from 'utils/hooks/useAuth'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    userName: Yup.string().required('Please enter your user name'),\r\n    password: Yup.string().required('Please enter your password'),\r\n    rememberMe: Yup.bool(),\r\n})\r\n\r\nconst SignInForm = (props) => {\r\n    const {\r\n        disableSubmit = false,\r\n        className,\r\n        forgotPasswordUrl = '/forgot-password',\r\n        signUpUrl = '/sign-up',\r\n    } = props\r\n\r\n    const [message, setMessage] = useTimeOutMessage()\r\n\r\n    const { signIn } = useAuth()\r\n\r\n    const onSignIn = async (values, setSubmitting) => {\r\n        const { userName, password } = values\r\n        setSubmitting(true)\r\n\r\n        const result = await signIn({ userName, password })\r\n\r\n        if (result.status === 'failed') {\r\n            setMessage(result.message)\r\n        }\r\n\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return (\r\n        <div className={className}>\r\n            {message && (\r\n                <Alert className=\"mb-4\" type=\"danger\" showIcon>\r\n                    {message}\r\n                </Alert>\r\n            )}\r\n            <Formik\r\n                // Remove this initial value\r\n                initialValues={{\r\n                    userName: 'admin',\r\n                    password: '123Qwe',\r\n                    rememberMe: true,\r\n                }}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    if (!disableSubmit) {\r\n                        onSignIn(values, setSubmitting)\r\n                    } else {\r\n                        setSubmitting(false)\r\n                    }\r\n                }}\r\n            >\r\n                {({ touched, errors, isSubmitting }) => (\r\n                    <Form>\r\n                        <FormContainer>\r\n                            <FormItem\r\n                                label=\"User Name\"\r\n                                invalid={errors.userName && touched.userName}\r\n                                errorMessage={errors.userName}\r\n                            >\r\n                                <Field\r\n                                    type=\"text\"\r\n                                    autoComplete=\"off\"\r\n                                    name=\"userName\"\r\n                                    placeholder=\"User Name\"\r\n                                    component={Input}\r\n                                />\r\n                            </FormItem>\r\n                            <FormItem\r\n                                label=\"Password\"\r\n                                invalid={errors.password && touched.password}\r\n                                errorMessage={errors.password}\r\n                            >\r\n                                <Field\r\n                                    autoComplete=\"off\"\r\n                                    name=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    component={PasswordInput}\r\n                                />\r\n                            </FormItem>\r\n                            <div className=\"flex justify-between mb-6\">\r\n                                <Field\r\n                                    className=\"mb-0\"\r\n                                    name=\"rememberMe\"\r\n                                    component={Checkbox}\r\n                                    children=\"Remember Me\"\r\n                                />\r\n                                <ActionLink to={forgotPasswordUrl}>\r\n                                    Forgot Password?\r\n                                </ActionLink>\r\n                            </div>\r\n                            <Button\r\n                                block\r\n                                loading={isSubmitting}\r\n                                variant=\"solid\"\r\n                                type=\"submit\"\r\n                            >\r\n                                {isSubmitting ? 'Signing in...' : 'Sign In'}\r\n                            </Button>\r\n                            <div className=\"mt-4 text-center\">\r\n                                <span>Don't have an account yet? </span>\r\n                                <ActionLink to={signUpUrl}>Sign up</ActionLink>\r\n                            </div>\r\n                        </FormContainer>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignInForm\r\n","import React from 'react'\r\nimport SignInForm from './SignInForm'\r\n\r\nconst SignIn = () => {\r\n    return (\r\n        <>\r\n            <div className=\"mb-8\">\r\n                <h3 className=\"mb-1\">Welcome back!</h3>\r\n                <p>Please enter your credentials to sign in!</p>\r\n            </div>\r\n            <SignInForm disableSubmit={false} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n"],"names":["interval","useState","message","setMessage","useEffect","timeout","setTimeout","clearTimeout","validationSchema","Yup","shape","userName","required","password","rememberMe","props","disableSubmit","className","forgotPasswordUrl","signUpUrl","useTimeOutMessage","signIn","useAuth","onSignIn","values","setSubmitting","result","status","type","showIcon","initialValues","onSubmit","touched","errors","isSubmitting","label","invalid","errorMessage","autoComplete","name","placeholder","component","Input","PasswordInput","Checkbox","children","to","block","loading","variant"],"sourceRoot":""}