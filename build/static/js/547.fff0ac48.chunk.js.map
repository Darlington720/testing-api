{"version":3,"file":"static/js/547.fff0ac48.chunk.js","mappings":"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","sources":["components/template/StackedSideNav/StackedSideNavMini.js","components/template/StackedSideNav/StackedSideNavSecondary.js","components/template/StackedSideNav/index.js","components/layout/StackedSideLayout.js","components/template/Header.js","components/template/Logo.js","components/template/MobileNav.js","components/template/UserDropdown.js","components/template/VerticalMenuContent/VerticalMenuIcon.js","components/template/VerticalMenuContent/VerticalSingleMenuItem.js","components/template/VerticalMenuContent/VerticalCollapsedMenuItem.js","components/template/VerticalMenuContent/index.js","configs/navigation-icon.config.js","configs/navigation.config/index.js","constants/navigation.constant.js","utils/hooks/useMenuActive.js","utils/hooks/useResponsive.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport Logo from 'components/template/Logo'\r\nimport { Menu, ScrollBar } from 'components/ui'\r\nimport {\r\n    NAV_MODE_DARK,\r\n    NAV_MODE_THEMED,\r\n    NAV_MODE_TRANSPARENT,\r\n    SIDE_NAV_CONTENT_GUTTER,\r\n} from 'constants/theme.constant'\r\nimport { NAV_ITEM_TYPE_ITEM } from 'constants/navigation.constant'\r\nimport { AuthorityCheck } from 'components/shared'\r\nimport navigationConfig from 'configs/navigation.config'\r\nimport navigationIcon from 'configs/navigation-icon.config'\r\nimport useMenuActive from 'utils/hooks/useMenuActive'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst StackedSideNavMini = (props) => {\r\n    const {\r\n        navMode,\r\n        onChange,\r\n        routeKey,\r\n        activeKeys,\r\n        onSetActiveKey,\r\n        userAuthority,\r\n        mode,\r\n        direction,\r\n        ...rest\r\n    } = props\r\n\r\n    const { includedRouteTree } = useMenuActive(navigationConfig, routeKey)\r\n\r\n    const logoMode = () => {\r\n        if (navMode === NAV_MODE_THEMED) {\r\n            return NAV_MODE_DARK\r\n        }\r\n\r\n        if (navMode === NAV_MODE_TRANSPARENT) {\r\n            return mode\r\n        }\r\n\r\n        return navMode\r\n    }\r\n\r\n    const handleMenuItemSelect = ({ key, title, menu, translateKey }) => {\r\n        onChange({ title, menu, translateKey })\r\n        onSetActiveKey([key])\r\n    }\r\n\r\n    const handleLinkMenuItemSelect = ({ key }) => {\r\n        onChange({})\r\n        onSetActiveKey([key])\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (\r\n            includedRouteTree.type !== NAV_ITEM_TYPE_ITEM &&\r\n            !isEmpty(includedRouteTree)\r\n        ) {\r\n            onChange({\r\n                key: includedRouteTree.key,\r\n                title: includedRouteTree.title,\r\n                menu: includedRouteTree.subMenu,\r\n                translateKey: includedRouteTree.translateKey,\r\n            })\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [includedRouteTree.key])\r\n\r\n    return (\r\n        <div {...rest}>\r\n            <Logo\r\n                mode={logoMode()}\r\n                type=\"streamline\"\r\n                gutter={SIDE_NAV_CONTENT_GUTTER}\r\n            />\r\n            <ScrollBar autoHide direction={direction}>\r\n                <Menu\r\n                    className=\"px-4 pb-4\"\r\n                    variant={navMode}\r\n                    defaultActiveKeys={activeKeys || [includedRouteTree.key]}\r\n                >\r\n                    {navigationConfig.map((nav) => (\r\n                        <AuthorityCheck\r\n                            key={nav.key}\r\n                            authority={nav.authority}\r\n                            userAuthority={userAuthority}\r\n                        >\r\n                            {nav.subMenu && nav.subMenu.length > 0 ? (\r\n                                <Menu.MenuItem\r\n                                    eventKey={nav.key}\r\n                                    className=\"mb-2\"\r\n                                    onSelect={() =>\r\n                                        handleMenuItemSelect({\r\n                                            key: nav.key,\r\n                                            title: nav.title,\r\n                                            menu: nav.subMenu,\r\n                                            translateKey: nav.translateKey,\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    <div className=\"text-2xl\">\r\n                                        {navigationIcon[nav.icon]}\r\n                                    </div>\r\n                                </Menu.MenuItem>\r\n                            ) : (\r\n                                <Link\r\n                                    to={nav.path}\r\n                                    className=\"flex items-center h-full w-full\"\r\n                                    onClick={() =>\r\n                                        handleLinkMenuItemSelect({\r\n                                            key: nav.key,\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    <Menu.MenuItem\r\n                                        eventKey={nav.key}\r\n                                        className=\"mb-2\"\r\n                                    >\r\n                                        <div className=\"text-2xl\">\r\n                                            {navigationIcon[nav.icon]}\r\n                                        </div>\r\n                                    </Menu.MenuItem>\r\n                                </Link>\r\n                            )}\r\n                        </AuthorityCheck>\r\n                    ))}\r\n                </Menu>\r\n            </ScrollBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StackedSideNavMini\r\n","import React from 'react'\r\nimport { Button, ScrollBar } from 'components/ui'\r\nimport classNames from 'classnames'\r\nimport { HEADER_HEIGHT_CLASS, DIR_LTR, DIR_RTL } from 'constants/theme.constant'\r\nimport VerticalMenuContent from 'components/template/VerticalMenuContent'\r\nimport { HiOutlineArrowSmLeft, HiOutlineArrowSmRight } from 'react-icons/hi'\r\n\r\nconst StackedSideNavSecondary = (props) => {\r\n    const {\r\n        className,\r\n        title,\r\n        menu,\r\n        routeKey,\r\n        onCollapse,\r\n        direction,\r\n        userAuthority,\r\n        navMode,\r\n        ...rest\r\n    } = props\r\n\r\n    const handleCollpase = () => {\r\n        onCollapse()\r\n    }\r\n\r\n    return (\r\n        <div className={classNames('h-full', className)} {...rest}>\r\n            <div\r\n                className={`${HEADER_HEIGHT_CLASS} flex items-center justify-between gap-4 pl-6 pr-4`}\r\n            >\r\n                <h5 className=\"font-bold\">{title}</h5>\r\n                <Button\r\n                    shape=\"circle\"\r\n                    variant=\"plain\"\r\n                    size=\"sm\"\r\n                    icon={\r\n                        <>\r\n                            {direction === DIR_LTR && <HiOutlineArrowSmLeft />}\r\n                            {direction === DIR_RTL && <HiOutlineArrowSmRight />}\r\n                        </>\r\n                    }\r\n                    onClick={handleCollpase}\r\n                />\r\n            </div>\r\n            <ScrollBar autoHide direction={direction}>\r\n                <VerticalMenuContent\r\n                    routeKey={routeKey}\r\n                    navigationTree={menu}\r\n                    userAuthority={userAuthority}\r\n                    navMode={navMode}\r\n                />\r\n            </ScrollBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StackedSideNavSecondary\r\n","import React, { useState } from 'react'\r\nimport {\r\n    NAV_MODE_THEMED,\r\n    SPLITTED_SIDE_NAV_MINI_WIDTH,\r\n    SPLITTED_SIDE_NAV_SECONDARY_WIDTH,\r\n    DIR_LTR,\r\n    DIR_RTL,\r\n    NAV_MODE_TRANSPARENT,\r\n} from 'constants/theme.constant'\r\nimport StackedSideNavMini from './StackedSideNavMini'\r\nimport StackedSideNavSecondary from './StackedSideNavSecondary'\r\nimport useResponsive from 'utils/hooks/useResponsive'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport { useSelector } from 'react-redux'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst stackedSideNavDefaultStyle = {\r\n    width: SPLITTED_SIDE_NAV_MINI_WIDTH,\r\n}\r\n\r\nconst StackedSideNav = () => {\r\n    const { t } = useTranslation()\r\n\r\n    const [selectedMenu, setSelectedMenu] = useState({})\r\n    const [activeKeys, setActiveKeys] = useState()\r\n\r\n    const themeColor = useSelector((state) => state.theme.themeColor)\r\n    const primaryColorLevel = useSelector(\r\n        (state) => state.theme.primaryColorLevel\r\n    )\r\n    const navMode = useSelector((state) => state.theme.navMode)\r\n    const mode = useSelector((state) => state.theme.mode)\r\n    const direction = useSelector((state) => state.theme.direction)\r\n    const currentRouteKey = useSelector(\r\n        (state) => state.base.common.currentRouteKey\r\n    )\r\n    const userAuthority = useSelector((state) => state.auth.user.authority)\r\n\r\n    const { larger } = useResponsive()\r\n\r\n    const navColor = (navType, mode, ableTheme = true) => {\r\n        if (navMode === NAV_MODE_THEMED && ableTheme) {\r\n            return `bg-${themeColor}-${primaryColorLevel} ${navType}-${mode}`\r\n        }\r\n        return `${navType}-${mode}`\r\n    }\r\n\r\n    const handleChange = (selected) => {\r\n        setSelectedMenu(selected)\r\n    }\r\n\r\n    const handleCollpase = () => {\r\n        setSelectedMenu({})\r\n        setActiveKeys([])\r\n    }\r\n\r\n    const handleSetActiveKey = (key) => {\r\n        setActiveKeys(key)\r\n    }\r\n\r\n    const stackedSideNavSecondaryDirStyle = () => {\r\n        let style = {}\r\n        const marginValue = `${-SPLITTED_SIDE_NAV_SECONDARY_WIDTH}px`\r\n        if (direction === DIR_LTR) {\r\n            style = { marginLeft: marginValue }\r\n        }\r\n\r\n        if (direction === DIR_RTL) {\r\n            style = { marginRight: marginValue }\r\n        }\r\n\r\n        return style\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {larger.md && (\r\n                <div className={`stacked-side-nav`}>\r\n                    <StackedSideNavMini\r\n                        className={`stacked-side-nav-mini ${navColor(\r\n                            'stacked-side-nav-mini',\r\n                            navMode\r\n                        )}`}\r\n                        style={stackedSideNavDefaultStyle}\r\n                        routeKey={currentRouteKey}\r\n                        activeKeys={activeKeys}\r\n                        navMode={navMode}\r\n                        onChange={handleChange}\r\n                        onSetActiveKey={handleSetActiveKey}\r\n                        userAuthority={userAuthority}\r\n                        mode={mode}\r\n                        direction={direction}\r\n                    />\r\n                    <div\r\n                        className={`stacked-side-nav-secondary ${navColor(\r\n                            'stacked-side-nav-secondary',\r\n                            mode,\r\n                            false\r\n                        )}`}\r\n                        style={{\r\n                            width: SPLITTED_SIDE_NAV_SECONDARY_WIDTH,\r\n                            ...(isEmpty(selectedMenu)\r\n                                ? stackedSideNavSecondaryDirStyle()\r\n                                : {}),\r\n                        }}\r\n                    >\r\n                        {!isEmpty(selectedMenu) && (\r\n                            <StackedSideNavSecondary\r\n                                title={t(\r\n                                    selectedMenu.translateKey,\r\n                                    selectedMenu.title\r\n                                )}\r\n                                menu={selectedMenu.menu}\r\n                                routeKey={currentRouteKey}\r\n                                navMode={NAV_MODE_TRANSPARENT}\r\n                                onCollapse={handleCollpase}\r\n                                direction={direction}\r\n                                userAuthority={userAuthority}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StackedSideNav\r\n","import React from 'react'\r\nimport Header from 'components/template/Header'\r\nimport SidePanel from 'components/template/SidePanel'\r\nimport UserDropdown from 'components/template/UserDropdown'\r\nimport MobileNav from 'components/template/MobileNav'\r\nimport StackedSideNav from 'components/template/StackedSideNav'\r\nimport View from 'views'\r\n\r\nconst HeaderActionsStart = () => {\r\n    return (\r\n        <>\r\n            <MobileNav />\r\n        </>\r\n    )\r\n}\r\n\r\nconst HeaderActionsEnd = () => {\r\n    return (\r\n        <>\r\n            <SidePanel />\r\n            <UserDropdown hoverable={false} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst StackedSideLayout = () => {\r\n    return (\r\n        <div className=\"app-layout-stacked-side flex flex-auto flex-col\">\r\n            <div className=\"flex flex-auto min-w-0\">\r\n                <StackedSideNav />\r\n                <div className=\"flex flex-col flex-auto min-h-screen min-w-0 relative w-full\">\r\n                    <Header\r\n                        className=\"shadow dark:shadow-2xl\"\r\n                        headerStart={<HeaderActionsStart />}\r\n                        headerEnd={<HeaderActionsEnd />}\r\n                    />\r\n                    <div className=\"h-full flex flex-auto flex-col\">\r\n                        <View />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StackedSideLayout\r\n","import React from 'react'\r\nimport classNames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\nimport { HEADER_HEIGHT_CLASS } from 'constants/theme.constant'\r\n\r\nconst Header = (props) => {\r\n    const { headerStart, headerEnd, headerMiddle, className, container } = props\r\n\r\n    return (\r\n        <header className={classNames('header', className)}>\r\n            <div\r\n                className={classNames(\r\n                    'header-wrapper',\r\n                    HEADER_HEIGHT_CLASS,\r\n                    container && 'container mx-auto'\r\n                )}\r\n            >\r\n                <div className=\"header-action header-action-start\">\r\n                    {headerStart}\r\n                </div>\r\n                {headerMiddle && (\r\n                    <div className=\"header-action header-action-middle\">\r\n                        {headerMiddle}\r\n                    </div>\r\n                )}\r\n                <div className=\"header-action header-action-end\">\r\n                    {headerEnd}\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    headerStart: PropTypes.node,\r\n    headerEnd: PropTypes.node,\r\n    container: PropTypes.bool,\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport { APP_NAME } from 'constants/app.constant'\r\n\r\nconst LOGO_SRC_PATH = '/img/logo/'\r\n\r\nconst Logo = (props) => {\r\n    const { type, mode, gutter, className, imgClass, style, logoWidth } = props\r\n\r\n    return (\r\n        <div\r\n            className={classNames('logo', className, gutter)}\r\n            style={{\r\n                ...style,\r\n                ...{ width: logoWidth },\r\n            }}\r\n        >\r\n            <img\r\n                className={imgClass}\r\n                src={`${LOGO_SRC_PATH}logo-${mode}-${type}.png`}\r\n                alt={`${APP_NAME} logo`}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nLogo.defaultProps = {\r\n    mode: 'light',\r\n    type: 'full',\r\n    logoWidth: 'auto',\r\n}\r\n\r\nLogo.propTypes = {\r\n    mode: PropTypes.oneOf(['light', 'dark']),\r\n    type: PropTypes.oneOf(['full', 'streamline']),\r\n    gutter: PropTypes.string,\r\n    imgClass: PropTypes.string,\r\n    logoWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n}\r\n\r\nexport default Logo\r\n","import React, { useState, Suspense, lazy } from 'react'\r\nimport classNames from 'classnames'\r\nimport { Drawer } from 'components/ui'\r\nimport {\r\n    NAV_MODE_THEMED,\r\n    NAV_MODE_TRANSPARENT,\r\n    DIR_RTL,\r\n} from 'constants/theme.constant'\r\nimport withHeaderItem from 'utils/hoc/withHeaderItem'\r\nimport { NavToggle } from 'components/shared'\r\nimport navigationConfig from 'configs/navigation.config'\r\nimport useResponsive from 'utils/hooks/useResponsive'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst VerticalMenuContent = lazy(() =>\r\n    import('components/template/VerticalMenuContent')\r\n)\r\n\r\nconst MobileNavToggle = withHeaderItem(NavToggle)\r\n\r\nconst MobileNav = () => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const openDrawer = () => {\r\n        setIsOpen(true)\r\n    }\r\n\r\n    const onDrawerClose = (e) => {\r\n        setIsOpen(false)\r\n    }\r\n\r\n    const themeColor = useSelector((state) => state.theme.themeColor)\r\n    const primaryColorLevel = useSelector(\r\n        (state) => state.theme.primaryColorLevel\r\n    )\r\n    const navMode = useSelector((state) => state.theme.navMode)\r\n    const mode = useSelector((state) => state.theme.mode)\r\n    const direction = useSelector((state) => state.theme.direction)\r\n    const currentRouteKey = useSelector(\r\n        (state) => state.base.common.currentRouteKey\r\n    )\r\n    const sideNavCollapse = useSelector(\r\n        (state) => state.theme.layout.sideNavCollapse\r\n    )\r\n    const userAuthority = useSelector((state) => state.auth.user.authority)\r\n\r\n    const { smaller } = useResponsive()\r\n\r\n    const navColor = () => {\r\n        if (navMode === NAV_MODE_THEMED) {\r\n            return `bg-${themeColor}-${primaryColorLevel} side-nav-${navMode}`\r\n        }\r\n\r\n        if (navMode === NAV_MODE_TRANSPARENT) {\r\n            return `side-nav-${mode}`\r\n        }\r\n\r\n        return `side-nav-${navMode}`\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {smaller.md && (\r\n                <>\r\n                    <div className=\"text-2xl\" onClick={openDrawer}>\r\n                        <MobileNavToggle toggled={isOpen} />\r\n                    </div>\r\n                    <Drawer\r\n                        title=\"Navigation\"\r\n                        isOpen={isOpen}\r\n                        onClose={onDrawerClose}\r\n                        onRequestClose={onDrawerClose}\r\n                        bodyClass={classNames(navColor(), 'p-0')}\r\n                        width={330}\r\n                        placement={direction === DIR_RTL ? 'right' : 'left'}\r\n                    >\r\n                        <Suspense fallback={<></>}>\r\n                            {isOpen && (\r\n                                <VerticalMenuContent\r\n                                    navMode={navMode}\r\n                                    collapsed={sideNavCollapse}\r\n                                    navigationTree={navigationConfig}\r\n                                    routeKey={currentRouteKey}\r\n                                    userAuthority={userAuthority}\r\n                                    onMenuItemClick={onDrawerClose}\r\n                                    direction={direction}\r\n                                />\r\n                            )}\r\n                        </Suspense>\r\n                    </Drawer>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MobileNav\r\n","import React from 'react'\r\nimport { Avatar, Dropdown } from 'components/ui'\r\nimport withHeaderItem from 'utils/hoc/withHeaderItem'\r\nimport useAuth from 'utils/hooks/useAuth'\r\n// import { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport classNames from 'classnames'\r\nimport { HiOutlineUser, HiOutlineLogout } from 'react-icons/hi'\r\n\r\nconst dropdownItemList = []\r\n\r\nexport const UserDropdown = ({ className }) => {\r\n    // bind this\r\n    // const userInfo = useSelector((state) => state.auth.user)\r\n\r\n    const { signOut } = useAuth()\r\n\r\n    const UserAvatar = (\r\n        <div className={classNames(className, 'flex items-center gap-2')}>\r\n            <Avatar size={32} shape=\"circle\" icon={<HiOutlineUser />} />\r\n            <div className=\"hidden md:block\">\r\n                <div className=\"text-xs capitalize\">admin</div>\r\n                <div className=\"font-bold\">User01</div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <Dropdown\r\n                menuStyle={{ minWidth: 240 }}\r\n                renderTitle={UserAvatar}\r\n                placement=\"bottom-end\"\r\n            >\r\n                <Dropdown.Item variant=\"header\">\r\n                    <div className=\"py-2 px-3 flex items-center gap-2\">\r\n                        <Avatar shape=\"circle\" icon={<HiOutlineUser />} />\r\n                        <div>\r\n                            <div className=\"font-bold text-gray-900 dark:text-gray-100\">\r\n                                User01\r\n                            </div>\r\n                            <div className=\"text-xs\">user01@mail.com</div>\r\n                        </div>\r\n                    </div>\r\n                </Dropdown.Item>\r\n                <Dropdown.Item variant=\"divider\" />\r\n                {dropdownItemList.map((item) => (\r\n                    <Dropdown.Item\r\n                        key={item.label}\r\n                        eventKey={item.label}\r\n                        className=\"mb-1 px-0\"\r\n                    >\r\n                        <Link \r\n                            className=\"flex h-full w-full px-2\" \r\n                            to={item.path}\r\n                        >\r\n                            <span className=\"flex gap-2 items-center w-full\">\r\n                                <span className=\"text-xl opacity-50\">\r\n                                    {item.icon}\r\n                                </span>\r\n                                <span>{item.label}</span>\r\n                            </span>\r\n                        </Link>\r\n                    </Dropdown.Item>\r\n                ))}\r\n                {/* <Dropdown.Item variant=\"divider\" /> */}\r\n                <Dropdown.Item\r\n                    onClick={signOut}\r\n                    eventKey=\"Sign Out\"\r\n                    className=\"gap-2\"\r\n                >\r\n                    <span className=\"text-xl opacity-50\">\r\n                        <HiOutlineLogout />\r\n                    </span>\r\n                    <span>Sign Out</span>\r\n                </Dropdown.Item>\r\n            </Dropdown>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withHeaderItem(UserDropdown)\r\n","import React from 'react'\r\nimport navigationIcon from 'configs/navigation-icon.config'\r\n\r\nexport const Icon = ({ component: Component }) => {\r\n    return (\r\n        <>\r\n            <Component />\r\n        </>\r\n    )\r\n}\r\n\r\nconst VerticalMenuIcon = ({ icon, gutter }) => {\r\n    if (typeof icon !== 'string' && !icon) {\r\n        return <></>\r\n    }\r\n\r\n    return (\r\n        <span className={`text-2xl ${gutter ? 'ltr:mr-2 rtl:ml-2' : ''}`}>\r\n            {navigationIcon[icon]}\r\n        </span>\r\n    )\r\n}\r\n\r\nVerticalMenuIcon.defaultProps = {\r\n    gutter: true,\r\n}\r\n\r\nexport default VerticalMenuIcon\r\n","import React from 'react'\r\nimport { Menu, Tooltip } from 'components/ui'\r\nimport VerticalMenuIcon from './VerticalMenuIcon'\r\nimport { Link } from 'react-router-dom'\r\nimport { Trans, useTranslation } from 'react-i18next'\r\nimport { AuthorityCheck } from 'components/shared'\r\n\r\nconst { MenuItem } = Menu\r\n\r\nconst CollapsedItem = ({ title, translateKey, children, direction }) => {\r\n    const { t } = useTranslation()\r\n\r\n    return (\r\n        <Tooltip\r\n            title={t(translateKey) || title}\r\n            placement={direction === 'rtl' ? 'left' : 'right'}\r\n        >\r\n            {children}\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nconst DefaultItem = (props) => {\r\n    const { nav, onLinkClick, sideCollapsed, userAuthority } = props\r\n\r\n    return (\r\n        <AuthorityCheck userAuthority={userAuthority} authority={nav.authority}>\r\n            <MenuItem key={nav.key} eventKey={nav.key} className=\"mb-2\">\r\n                <Link\r\n                    to={nav.path}\r\n                    onClick={() =>\r\n                        onLinkClick?.({\r\n                            key: nav.key,\r\n                            title: nav.title,\r\n                            path: nav.path,\r\n                        })\r\n                    }\r\n                    className=\"flex items-center h-full w-full\"\r\n                >\r\n                    <VerticalMenuIcon icon={nav.icon} />\r\n                    {!sideCollapsed && (\r\n                        <span>\r\n                            <Trans\r\n                                i18nKey={nav.translateKey}\r\n                                defaults={nav.title}\r\n                            />\r\n                        </span>\r\n                    )}\r\n                </Link>\r\n            </MenuItem>\r\n        </AuthorityCheck>\r\n    )\r\n}\r\n\r\nconst VerticalSingleMenuItem = ({\r\n    nav,\r\n    onLinkClick,\r\n    sideCollapsed,\r\n    userAuthority,\r\n    direction,\r\n}) => {\r\n    return (\r\n        <AuthorityCheck userAuthority={userAuthority} authority={nav.authority}>\r\n            {sideCollapsed ? (\r\n                <CollapsedItem\r\n                    title={nav.title}\r\n                    translateKey={nav.translateKey}\r\n                    direction={direction}\r\n                >\r\n                    <DefaultItem\r\n                        nav={nav}\r\n                        sideCollapsed={sideCollapsed}\r\n                        onLinkClick={onLinkClick}\r\n                        userAuthority={userAuthority}\r\n                    />\r\n                </CollapsedItem>\r\n            ) : (\r\n                <DefaultItem\r\n                    nav={nav}\r\n                    sideCollapsed={sideCollapsed}\r\n                    onLinkClick={onLinkClick}\r\n                    userAuthority={userAuthority}\r\n                />\r\n            )}\r\n        </AuthorityCheck>\r\n    )\r\n}\r\n\r\nexport default VerticalSingleMenuItem\r\n","import React from 'react'\r\nimport { Menu, Dropdown } from 'components/ui'\r\nimport { Link } from 'react-router-dom'\r\nimport VerticalMenuIcon from './VerticalMenuIcon'\r\nimport { Trans } from 'react-i18next'\r\nimport { AuthorityCheck } from 'components/shared'\r\n\r\nconst { MenuItem, MenuCollapse } = Menu\r\n\r\nconst DefaultItem = ({ nav, onLinkClick, userAuthority }) => {\r\n    return (\r\n        <AuthorityCheck userAuthority={userAuthority} authority={nav.authority}>\r\n            <MenuCollapse\r\n                label={\r\n                    <>\r\n                        <VerticalMenuIcon icon={nav.icon} />\r\n                        <span>\r\n                            <Trans\r\n                                i18nKey={nav.translateKey}\r\n                                defaults={nav.title}\r\n                            />\r\n                        </span>\r\n                    </>\r\n                }\r\n                key={nav.key}\r\n                eventKey={nav.key}\r\n                expanded={false}\r\n                className=\"mb-2\"\r\n            >\r\n                {nav.subMenu.map((subNav) => (\r\n                    <AuthorityCheck\r\n                        userAuthority={userAuthority}\r\n                        authority={subNav.authority}\r\n                        key={subNav.key}\r\n                    >\r\n                        <MenuItem eventKey={subNav.key}>\r\n                            {subNav.path ? (\r\n                                <Link\r\n                                    className=\"h-full w-full flex items-center\"\r\n                                    onClick={() =>\r\n                                        onLinkClick?.({\r\n                                            key: subNav.key,\r\n                                            title: subNav.title,\r\n                                            path: subNav.path,\r\n                                        })\r\n                                    }\r\n                                    to={subNav.path}\r\n                                >\r\n                                    <span>\r\n                                        <Trans\r\n                                            i18nKey={subNav.translateKey}\r\n                                            defaults={subNav.title}\r\n                                        />\r\n                                    </span>\r\n                                </Link>\r\n                            ) : (\r\n                                <span>\r\n                                    <Trans\r\n                                        i18nKey={subNav.translateKey}\r\n                                        defaults={subNav.title}\r\n                                    />\r\n                                </span>\r\n                            )}\r\n                        </MenuItem>\r\n                    </AuthorityCheck>\r\n                ))}\r\n            </MenuCollapse>\r\n        </AuthorityCheck>\r\n    )\r\n}\r\n\r\nconst CollapsedItem = ({ nav, onLinkClick, userAuthority, direction }) => {\r\n    const menuItem = (\r\n        <MenuItem key={nav.key} eventKey={nav.key} className=\"mb-2\">\r\n            <VerticalMenuIcon icon={nav.icon} />\r\n        </MenuItem>\r\n    )\r\n\r\n    return (\r\n        <AuthorityCheck userAuthority={userAuthority} authority={nav.authority}>\r\n            <Dropdown\r\n                trigger=\"hover\"\r\n                renderTitle={menuItem}\r\n                placement={\r\n                    direction === 'rtl' ? 'middle-end-top' : 'middle-start-top'\r\n                }\r\n            >\r\n                {nav.subMenu.map((subNav) => (\r\n                    <AuthorityCheck\r\n                        userAuthority={userAuthority}\r\n                        authority={subNav.authority}\r\n                        key={subNav.key}\r\n                    >\r\n                        <Dropdown.Item eventKey={subNav.key}>\r\n                            {subNav.path ? (\r\n                                <Link\r\n                                    className=\"h-full w-full flex items-center\"\r\n                                    onClick={() =>\r\n                                        onLinkClick?.({\r\n                                            key: subNav.key,\r\n                                            title: subNav.title,\r\n                                            path: subNav.path,\r\n                                        })\r\n                                    }\r\n                                    to={subNav.path}\r\n                                >\r\n                                    <span>\r\n                                        <Trans\r\n                                            i18nKey={subNav.translateKey}\r\n                                            defaults={subNav.title}\r\n                                        />\r\n                                    </span>\r\n                                </Link>\r\n                            ) : (\r\n                                <span>\r\n                                    <Trans\r\n                                        i18nKey={subNav.translateKey}\r\n                                        defaults={subNav.title}\r\n                                    />\r\n                                </span>\r\n                            )}\r\n                        </Dropdown.Item>\r\n                    </AuthorityCheck>\r\n                ))}\r\n            </Dropdown>\r\n        </AuthorityCheck>\r\n    )\r\n}\r\n\r\nconst VerticalCollapsedMenuItem = ({ sideCollapsed, ...rest }) => {\r\n    return sideCollapsed ? (\r\n        <CollapsedItem {...rest} />\r\n    ) : (\r\n        <DefaultItem {...rest} />\r\n    )\r\n}\r\n\r\nexport default VerticalCollapsedMenuItem\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Menu } from 'components/ui'\r\nimport { AuthorityCheck } from 'components/shared'\r\nimport VerticalSingleMenuItem from './VerticalSingleMenuItem'\r\nimport VerticalCollapsedMenuItem from './VerticalCollapsedMenuItem'\r\nimport { themeConfig } from 'configs/theme.config'\r\nimport {\r\n    NAV_ITEM_TYPE_TITLE,\r\n    NAV_ITEM_TYPE_COLLAPSE,\r\n    NAV_ITEM_TYPE_ITEM,\r\n} from 'constants/navigation.constant'\r\nimport useMenuActive from 'utils/hooks/useMenuActive'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst { MenuGroup } = Menu\r\n\r\nconst VerticalMenuContent = (props) => {\r\n    const {\r\n        navMode = themeConfig.navMode,\r\n        collapsed,\r\n        routeKey,\r\n        navigationTree = [],\r\n        userAuthority = [],\r\n        onMenuItemClick,\r\n        direction = themeConfig.direction,\r\n    } = props\r\n\r\n    const { t } = useTranslation()\r\n\r\n    const [defaulExpandKey, setDefaulExpandKey] = useState([])\r\n\r\n    const { activedRoute } = useMenuActive(navigationTree, routeKey)\r\n\r\n    useEffect(() => {\r\n        if (defaulExpandKey.length === 0 && activedRoute?.parentKey) {\r\n            setDefaulExpandKey([activedRoute?.parentKey])\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [activedRoute?.parentKey])\r\n\r\n    const handleLinkClick = () => {\r\n        onMenuItemClick?.()\r\n    }\r\n\r\n    const getNavItem = (nav) => {\r\n        if (nav.subMenu.length === 0 && nav.type === NAV_ITEM_TYPE_ITEM) {\r\n            return (\r\n                <VerticalSingleMenuItem\r\n                    key={nav.key}\r\n                    nav={nav}\r\n                    onLinkClick={handleLinkClick}\r\n                    sideCollapsed={collapsed}\r\n                    userAuthority={userAuthority}\r\n                    direction={direction}\r\n                />\r\n            )\r\n        }\r\n\r\n        if (nav.subMenu.length > 0 && nav.type === NAV_ITEM_TYPE_COLLAPSE) {\r\n            return (\r\n                <VerticalCollapsedMenuItem\r\n                    key={nav.key}\r\n                    nav={nav}\r\n                    onLinkClick={onMenuItemClick}\r\n                    sideCollapsed={collapsed}\r\n                    userAuthority={userAuthority}\r\n                    direction={direction}\r\n                />\r\n            )\r\n        }\r\n\r\n        if (nav.type === NAV_ITEM_TYPE_TITLE) {\r\n            if (nav.subMenu.length > 0) {\r\n                return (\r\n                    <AuthorityCheck\r\n                        key={nav.key}\r\n                        userAuthority={userAuthority}\r\n                        authority={nav.authority}\r\n                    >\r\n                        <MenuGroup label={t(nav.translateKey) || nav.title}>\r\n                            {nav.subMenu.map((subNav) =>\r\n                                subNav.subMenu.length > 0 ? (\r\n                                    <VerticalCollapsedMenuItem\r\n                                        key={subNav.key}\r\n                                        nav={subNav}\r\n                                        onLinkClick={onMenuItemClick}\r\n                                        sideCollapsed={collapsed}\r\n                                        userAuthority={userAuthority}\r\n                                        direction={direction}\r\n                                    />\r\n                                ) : (\r\n                                    <VerticalSingleMenuItem\r\n                                        key={subNav.key}\r\n                                        nav={subNav}\r\n                                        onLinkClick={onMenuItemClick}\r\n                                        sideCollapsed={collapsed}\r\n                                        userAuthority={userAuthority}\r\n                                        direction={direction}\r\n                                    />\r\n                                )\r\n                            )}\r\n                        </MenuGroup>\r\n                    </AuthorityCheck>\r\n                )\r\n            } else {\r\n                ;<MenuGroup label={nav.title} />\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Menu\r\n            className=\"px-4 pb-4\"\r\n            variant={navMode}\r\n            sideCollapsed={collapsed}\r\n            defaultActiveKeys={activedRoute?.key ? [activedRoute.key] : []}\r\n            defaultExpandedKeys={defaulExpandKey}\r\n        >\r\n            {navigationTree.map((nav) => getNavItem(nav))}\r\n        </Menu>\r\n    )\r\n}\r\n\r\nVerticalMenuContent.propTypes = {\r\n    navMode: PropTypes.oneOf(['light', 'dark', 'themed', 'transparent']),\r\n    collapsed: PropTypes.bool,\r\n    routeKey: PropTypes.string,\r\n    navigationTree: PropTypes.array,\r\n    userAuthority: PropTypes.array,\r\n    direction: PropTypes.oneOf(['rtl', 'ltr']),\r\n}\r\n\r\nexport default VerticalMenuContent\r\n","import React from 'react'\r\nimport {\r\n    HiOutlineColorSwatch,\r\n    HiOutlineDesktopComputer,\r\n    HiOutlineTemplate,\r\n    HiOutlineViewGridAdd,\r\n    HiOutlineHome,\r\n} from 'react-icons/hi'\r\n\r\nconst navigationIcon = {\r\n    home: <HiOutlineHome />,\r\n    singleMenu: <HiOutlineViewGridAdd />,\r\n    collapseMenu: <HiOutlineTemplate />,\r\n    groupSingleMenu: <HiOutlineDesktopComputer />,\r\n    groupCollapseMenu: <HiOutlineColorSwatch />,\r\n}\r\n\r\nexport default navigationIcon\r\n","import {\r\n    NAV_ITEM_TYPE_TITLE,\r\n    NAV_ITEM_TYPE_COLLAPSE,\r\n    NAV_ITEM_TYPE_ITEM,\r\n} from 'constants/navigation.constant'\r\n\r\nconst navigationConfig = [\r\n    {\r\n        key: 'home',\r\n        path: '/home',\r\n        title: 'Transcripts',\r\n        translateKey: 'nav.transcripts',\r\n        icon: 'singleMenu',\r\n        type: NAV_ITEM_TYPE_ITEM,\r\n        authority: [],\r\n        subMenu: [],\r\n    },\r\n    /** Example purpose only, please remove */\r\n    // {\r\n    //     key: 'singleMenuItem',\r\n    //     path: '/single-menu-view',\r\n    //     title: 'Single menu item',\r\n    //     translateKey: 'nav.singleMenuItem',\r\n    //     icon: 'singleMenu',\r\n    //     type: NAV_ITEM_TYPE_ITEM,\r\n    //     authority: [],\r\n    //     subMenu: [],\r\n    // },\r\n    // {\r\n    //     key: 'collapseMenu',\r\n    //     path: '',\r\n    //     title: 'Collapse Menu',\r\n    //     translateKey: 'nav.collapseMenu.collapseMenu',\r\n    //     icon: 'collapseMenu',\r\n    //     type: NAV_ITEM_TYPE_COLLAPSE,\r\n    //     authority: [],\r\n    //     subMenu: [\r\n    //         {\r\n    //             key: 'collapseMenu.item1',\r\n    //             path: '/collapse-menu-item-view-1',\r\n    //             title: 'Collapse menu item 1',\r\n    //             translateKey: 'nav.collapseMenu.item1',\r\n    //             icon: '',\r\n    //             type: NAV_ITEM_TYPE_ITEM,\r\n    //             authority: [],\r\n    //             subMenu: [],\r\n    //         },\r\n    //         {\r\n    //             key: 'collapseMenu.item2',\r\n    //             path: '/collapse-menu-item-view-2',\r\n    //             title: 'Collapse menu item 2',\r\n    //             translateKey: 'nav.collapseMenu.item2',\r\n    //             icon: '',\r\n    //             type: NAV_ITEM_TYPE_ITEM,\r\n    //             authority: [],\r\n    //             subMenu: [],\r\n    //         },\r\n    //     ],\r\n    // },\r\n    // {\r\n    //     key: 'groupMenu',\r\n    //     path: '',\r\n    //     title: 'Group Menu',\r\n    //     translateKey: 'nav.groupMenu.groupMenu',\r\n    //     icon: '',\r\n    //     type: NAV_ITEM_TYPE_TITLE,\r\n    //     authority: [],\r\n    //     subMenu: [\r\n    //         {\r\n    //             key: 'groupMenu.single',\r\n    //             path: '/group-single-menu-item-view',\r\n    //             title: 'Group single menu item',\r\n    //             translateKey: 'nav.groupMenu.single',\r\n    //             icon: 'groupSingleMenu',\r\n    //             type: NAV_ITEM_TYPE_ITEM,\r\n    //             authority: [],\r\n    //             subMenu: [],\r\n    //         },\r\n    //         {\r\n    //             key: 'groupMenu.collapse',\r\n    //             path: '',\r\n    //             title: 'Group collapse menu',\r\n    //             translateKey: 'nav.groupMenu.collapse.collapse',\r\n    //             icon: 'groupCollapseMenu',\r\n    //             type: NAV_ITEM_TYPE_COLLAPSE,\r\n    //             authority: [],\r\n    //             subMenu: [\r\n    //                 {\r\n    //                     key: 'groupMenu.collapse.item1',\r\n    //                     path: '/group-collapse-menu-item-view-1',\r\n    //                     title: 'Menu item 1',\r\n    //                     translateKey: 'nav.groupMenu.collapse.item1',\r\n    //                     icon: '',\r\n    //                     type: NAV_ITEM_TYPE_ITEM,\r\n    //                     authority: [],\r\n    //                     subMenu: [],\r\n    //                 },\r\n    //                 {\r\n    //                     key: 'groupMenu.collapse.item2',\r\n    //                     path: '/group-collapse-menu-item-view-2',\r\n    //                     title: 'Menu item 2',\r\n    //                     translateKey: 'nav.groupMenu.collapse.item2',\r\n    //                     icon: '',\r\n    //                     type: NAV_ITEM_TYPE_ITEM,\r\n    //                     authority: [],\r\n    //                     subMenu: [],\r\n    //                 },\r\n    //             ],\r\n    //         },\r\n    //     ],\r\n    // },\r\n]\r\n\r\nexport default navigationConfig\r\n","export const NAV_ITEM_TYPE_TITLE = 'title'\r\nexport const NAV_ITEM_TYPE_COLLAPSE = 'collapse'\r\nexport const NAV_ITEM_TYPE_ITEM = 'item'\r\n","import { useMemo } from 'react'\r\nimport isPlainObject from 'lodash/isPlainObject'\r\n\r\nconst getRouteInfo = (navTree, key) => {\r\n    if (navTree.key === key) {\r\n        return navTree\r\n    }\r\n    let activedRoute\r\n    let isIncludeActivedRoute = false\r\n    for (let p in navTree) {\r\n        if (\r\n            p !== 'icon' &&\r\n            navTree.hasOwnProperty(p) &&\r\n            typeof navTree[p] === 'object'\r\n        ) {\r\n            if (isPlainObject(navTree[p]) && navTree[p].subMenu.length > 0) {\r\n                if (navTree[p].subMenu.some((el) => el.key === key)) {\r\n                    isIncludeActivedRoute = true\r\n                }\r\n            }\r\n\r\n            activedRoute = getRouteInfo(navTree[p], key)\r\n\r\n            if (activedRoute) {\r\n                if (isIncludeActivedRoute) {\r\n                    activedRoute.parentKey = navTree[p].key\r\n                }\r\n\r\n                return activedRoute\r\n            }\r\n        }\r\n    }\r\n    return activedRoute\r\n}\r\n\r\nconst findNestedRoute = (navTree, key) => {\r\n    let found = navTree.find((node) => {\r\n        return node.key === key\r\n    })\r\n    if (found) {\r\n        return true\r\n    }\r\n    return navTree.some((c) => findNestedRoute(c.subMenu, key))\r\n}\r\n\r\nconst getTopRouteKey = (navTree, key) => {\r\n    let foundNav = {}\r\n    navTree.forEach((nav) => {\r\n        if (findNestedRoute([nav], key)) {\r\n            foundNav = nav\r\n        }\r\n    })\r\n    return foundNav\r\n}\r\n\r\nfunction useMenuActive(navTree, key) {\r\n    const activedRoute = useMemo(() => {\r\n        const route = getRouteInfo(navTree, key)\r\n        return route\r\n    }, [navTree, key])\r\n\r\n    const includedRouteTree = useMemo(() => {\r\n        const included = getTopRouteKey(navTree, key)\r\n        return included\r\n    }, [navTree, key])\r\n\r\n    return { activedRoute, includedRouteTree }\r\n}\r\n\r\nexport default useMenuActive\r\n","import { useEffect, useState } from 'react'\r\nimport { theme } from 'twin.macro'\r\n\r\nconst twBreakpoint = theme`screens`\r\n\r\nconst breakpointInt = (str = '') => {\r\n    return parseInt(str.replace('px', ''))\r\n}\r\n\r\nconst breakpoint = {\r\n    '2xl': breakpointInt(twBreakpoint['2xl']), // 1536\r\n    xl: breakpointInt(twBreakpoint.xl), // 1280\r\n    lg: breakpointInt(twBreakpoint.lg), // 1024\r\n    md: breakpointInt(twBreakpoint.md), // 768\r\n    sm: breakpointInt(twBreakpoint.sm), // 640\r\n    xs: breakpointInt(twBreakpoint.xs), // 576\r\n}\r\n\r\nconst useResponsive = () => {\r\n    const getAllSizes = (comparator = 'smaller') => {\r\n        const currentWindowWidth = window.innerWidth\r\n        return Object.fromEntries(\r\n            Object.entries(breakpoint).map(([key, value]) => [\r\n                key,\r\n                comparator === 'larger'\r\n                    ? currentWindowWidth > value\r\n                    : currentWindowWidth < value,\r\n            ])\r\n        )\r\n    }\r\n\r\n    const getResponsiveState = () => {\r\n        const currentWindowWidth = window.innerWidth\r\n        return {\r\n            windowWidth: currentWindowWidth,\r\n            larger: getAllSizes('larger'),\r\n            smaller: getAllSizes('smaller'),\r\n        }\r\n    }\r\n\r\n    const [responsive, setResponsive] = useState(getResponsiveState())\r\n\r\n    const resizeHandler = () => {\r\n        const responsiveState = getResponsiveState()\r\n        setResponsive(responsiveState)\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', resizeHandler)\r\n        return () => window.removeEventListener('resize', resizeHandler)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [responsive.windowWidth])\r\n\r\n    return responsive\r\n}\r\n\r\nexport default useResponsive\r\n"],"names":["props","navMode","onChange","routeKey","activeKeys","onSetActiveKey","userAuthority","mode","direction","rest","includedRouteTree","useMenuActive","navigationConfig","useEffect","type","NAV_ITEM_TYPE_ITEM","isEmpty","key","title","menu","subMenu","translateKey","Logo","NAV_MODE_THEMED","NAV_MODE_DARK","NAV_MODE_TRANSPARENT","gutter","SIDE_NAV_CONTENT_GUTTER","autoHide","className","variant","defaultActiveKeys","nav","authority","length","eventKey","onSelect","handleMenuItemSelect","navigationIcon","icon","to","path","onClick","handleLinkMenuItemSelect","onCollapse","classNames","HEADER_HEIGHT_CLASS","shape","size","DIR_LTR","DIR_RTL","VerticalMenuContent","navigationTree","stackedSideNavDefaultStyle","width","SPLITTED_SIDE_NAV_MINI_WIDTH","t","useTranslation","useState","selectedMenu","setSelectedMenu","setActiveKeys","themeColor","useSelector","state","theme","primaryColorLevel","currentRouteKey","base","common","auth","user","larger","useResponsive","navColor","navType","ableTheme","md","style","selected","SPLITTED_SIDE_NAV_SECONDARY_WIDTH","marginValue","marginLeft","marginRight","stackedSideNavSecondaryDirStyle","HeaderActionsStart","MobileNav","HeaderActionsEnd","SidePanel","UserDropdown","hoverable","Header","headerStart","headerEnd","headerMiddle","container","imgClass","logoWidth","src","alt","APP_NAME","defaultProps","lazy","MobileNavToggle","withHeaderItem","NavToggle","isOpen","setIsOpen","onDrawerClose","e","sideNavCollapse","layout","smaller","toggled","onClose","onRequestClose","bodyClass","placement","Suspense","fallback","collapsed","onMenuItemClick","dropdownItemList","signOut","useAuth","UserAvatar","menuStyle","minWidth","renderTitle","map","item","label","VerticalMenuIcon","MenuItem","Menu","CollapsedItem","children","DefaultItem","onLinkClick","sideCollapsed","Trans","i18nKey","defaults","MenuCollapse","expanded","subNav","menuItem","trigger","MenuGroup","themeConfig","defaulExpandKey","setDefaulExpandKey","activedRoute","parentKey","handleLinkClick","defaultExpandedKeys","NAV_ITEM_TYPE_COLLAPSE","NAV_ITEM_TYPE_TITLE","getNavItem","home","singleMenu","collapseMenu","groupSingleMenu","groupCollapseMenu","getRouteInfo","navTree","isIncludeActivedRoute","p","hasOwnProperty","isPlainObject","some","el","findNestedRoute","find","node","c","useMemo","included","foundNav","forEach","getTopRouteKey","twBreakpoint","breakpointInt","str","parseInt","replace","breakpoint","xl","lg","sm","xs","getAllSizes","comparator","currentWindowWidth","window","innerWidth","Object","fromEntries","entries","value","getResponsiveState","windowWidth","responsive","setResponsive","resizeHandler","responsiveState","addEventListener","removeEventListener"],"sourceRoot":""}