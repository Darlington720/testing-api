{"version":3,"file":"static/js/52.5fa985cd.chunk.js","mappings":"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","sources":["components/template/Header.js","components/template/Logo.js","components/template/MobileNav.js","components/template/SideNav.js","components/template/SideNavToggle.js","components/template/UserDropdown.js","components/template/VerticalMenuContent/VerticalMenuIcon.js","components/template/VerticalMenuContent/VerticalSingleMenuItem.js","components/template/VerticalMenuContent/VerticalCollapsedMenuItem.js","components/template/VerticalMenuContent/index.js","configs/navigation-icon.config.js","configs/navigation.config/index.js","constants/navigation.constant.js","utils/hooks/useMenuActive.js","utils/hooks/useResponsive.js"],"sourcesContent":["import React from 'react'\r\nimport classNames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\nimport { HEADER_HEIGHT_CLASS } from 'constants/theme.constant'\r\n\r\nconst Header = (props) => {\r\n    const { headerStart, headerEnd, headerMiddle, className, container } = props\r\n\r\n    return (\r\n        <header className={classNames('header', className)}>\r\n            <div\r\n                className={classNames(\r\n                    'header-wrapper',\r\n                    HEADER_HEIGHT_CLASS,\r\n                    container && 'container mx-auto'\r\n                )}\r\n            >\r\n                <div className=\"header-action header-action-start\">\r\n                    {headerStart}\r\n                </div>\r\n                {headerMiddle && (\r\n                    <div className=\"header-action header-action-middle\">\r\n                        {headerMiddle}\r\n                    </div>\r\n                )}\r\n                <div className=\"header-action header-action-end\">\r\n                    {headerEnd}\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    headerStart: PropTypes.node,\r\n    headerEnd: PropTypes.node,\r\n    container: PropTypes.bool,\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport { APP_NAME } from 'constants/app.constant'\r\n\r\nconst LOGO_SRC_PATH = '/img/logo/'\r\n\r\nconst Logo = (props) => {\r\n    const { type, mode, gutter, className, imgClass, style, logoWidth } = props\r\n\r\n    return (\r\n        <div\r\n            className={classNames('logo', className, gutter)}\r\n            style={{\r\n                ...style,\r\n                ...{ width: logoWidth },\r\n            }}\r\n        >\r\n            <img\r\n                className={imgClass}\r\n                src={`${LOGO_SRC_PATH}logo-${mode}-${type}.png`}\r\n                alt={`${APP_NAME} logo`}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nLogo.defaultProps = {\r\n    mode: 'light',\r\n    type: 'full',\r\n    logoWidth: 'auto',\r\n}\r\n\r\nLogo.propTypes = {\r\n    mode: PropTypes.oneOf(['light', 'dark']),\r\n    type: PropTypes.oneOf(['full', 'streamline']),\r\n    gutter: PropTypes.string,\r\n    imgClass: PropTypes.string,\r\n    logoWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n}\r\n\r\nexport default Logo\r\n","import React, { useState, Suspense, lazy } from 'react'\r\nimport classNames from 'classnames'\r\nimport { Drawer } from 'components/ui'\r\nimport {\r\n    NAV_MODE_THEMED,\r\n    NAV_MODE_TRANSPARENT,\r\n    DIR_RTL,\r\n} from 'constants/theme.constant'\r\nimport withHeaderItem from 'utils/hoc/withHeaderItem'\r\nimport { NavToggle } from 'components/shared'\r\nimport navigationConfig from 'configs/navigation.config'\r\nimport useResponsive from 'utils/hooks/useResponsive'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst VerticalMenuContent = lazy(() =>\r\n    import('components/template/VerticalMenuContent')\r\n)\r\n\r\nconst MobileNavToggle = withHeaderItem(NavToggle)\r\n\r\nconst MobileNav = () => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const openDrawer = () => {\r\n        setIsOpen(true)\r\n    }\r\n\r\n    const onDrawerClose = (e) => {\r\n        setIsOpen(false)\r\n    }\r\n\r\n    const themeColor = useSelector((state) => state.theme.themeColor)\r\n    const primaryColorLevel = useSelector(\r\n        (state) => state.theme.primaryColorLevel\r\n    )\r\n    const navMode = useSelector((state) => state.theme.navMode)\r\n    const mode = useSelector((state) => state.theme.mode)\r\n    const direction = useSelector((state) => state.theme.direction)\r\n    const currentRouteKey = useSelector(\r\n        (state) => state.base.common.currentRouteKey\r\n    )\r\n    const sideNavCollapse = useSelector(\r\n        (state) => state.theme.layout.sideNavCollapse\r\n    )\r\n    const userAuthority = useSelector((state) => state.auth.user.authority)\r\n\r\n    const { smaller } = useResponsive()\r\n\r\n    const navColor = () => {\r\n        if (navMode === NAV_MODE_THEMED) {\r\n            return `bg-${themeColor}-${primaryColorLevel} side-nav-${navMode}`\r\n        }\r\n\r\n        if (navMode === NAV_MODE_TRANSPARENT) {\r\n            return `side-nav-${mode}`\r\n        }\r\n\r\n        return `side-nav-${navMode}`\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {smaller.md && (\r\n                <>\r\n                    <div className=\"text-2xl\" onClick={openDrawer}>\r\n                        <MobileNavToggle toggled={isOpen} />\r\n                    </div>\r\n                    <Drawer\r\n                        title=\"Navigation\"\r\n                        isOpen={isOpen}\r\n                        onClose={onDrawerClose}\r\n                        onRequestClose={onDrawerClose}\r\n                        bodyClass={classNames(navColor(), 'p-0')}\r\n                        width={330}\r\n                        placement={direction === DIR_RTL ? 'right' : 'left'}\r\n                    >\r\n                        <Suspense fallback={<></>}>\r\n                            {isOpen && (\r\n                                <VerticalMenuContent\r\n                                    navMode={navMode}\r\n                                    collapsed={sideNavCollapse}\r\n                                    navigationTree={navigationConfig}\r\n                                    routeKey={currentRouteKey}\r\n                                    userAuthority={userAuthority}\r\n                                    onMenuItemClick={onDrawerClose}\r\n                                    direction={direction}\r\n                                />\r\n                            )}\r\n                        </Suspense>\r\n                    </Drawer>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MobileNav\r\n","import React from 'react'\r\nimport classNames from 'classnames'\r\nimport { ScrollBar } from 'components/ui'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n    SIDE_NAV_WIDTH,\r\n    SIDE_NAV_COLLAPSED_WIDTH,\r\n    NAV_MODE_DARK,\r\n    NAV_MODE_THEMED,\r\n    NAV_MODE_TRANSPARENT,\r\n    SIDE_NAV_CONTENT_GUTTER,\r\n    LOGO_X_GUTTER,\r\n} from 'constants/theme.constant'\r\nimport Logo from 'components/template/Logo'\r\nimport navigationConfig from 'configs/navigation.config'\r\nimport VerticalMenuContent from 'components/template/VerticalMenuContent'\r\nimport useResponsive from 'utils/hooks/useResponsive'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst sideNavStyle = {\r\n    width: SIDE_NAV_WIDTH,\r\n    minWidth: SIDE_NAV_WIDTH,\r\n}\r\n\r\nconst sideNavCollapseStyle = {\r\n    width: SIDE_NAV_COLLAPSED_WIDTH,\r\n    minWidth: SIDE_NAV_COLLAPSED_WIDTH,\r\n}\r\n\r\nconst SideNav = () => {\r\n    const themeColor = useSelector((state) => state.theme.themeColor)\r\n    const primaryColorLevel = useSelector(\r\n        (state) => state.theme.primaryColorLevel\r\n    )\r\n    const navMode = useSelector((state) => state.theme.navMode)\r\n    const mode = useSelector((state) => state.theme.mode)\r\n    const direction = useSelector((state) => state.theme.direction)\r\n    const currentRouteKey = useSelector(\r\n        (state) => state.base.common.currentRouteKey\r\n    )\r\n    const sideNavCollapse = useSelector(\r\n        (state) => state.theme.layout.sideNavCollapse\r\n    )\r\n    const userAuthority = useSelector((state) => state.auth.user.authority)\r\n\r\n    const { larger } = useResponsive()\r\n\r\n    const sideNavColor = () => {\r\n        if (navMode === NAV_MODE_THEMED) {\r\n            return `bg-${themeColor}-${primaryColorLevel} side-nav-${navMode}`\r\n        }\r\n        return `side-nav-${navMode}`\r\n    }\r\n\r\n    const logoMode = () => {\r\n        if (navMode === NAV_MODE_THEMED) {\r\n            return NAV_MODE_DARK\r\n        }\r\n\r\n        if (navMode === NAV_MODE_TRANSPARENT) {\r\n            return mode\r\n        }\r\n\r\n        return navMode\r\n    }\r\n\r\n    const menuContent = (\r\n        <VerticalMenuContent\r\n            navMode={navMode}\r\n            collapsed={sideNavCollapse}\r\n            navigationTree={navigationConfig}\r\n            routeKey={currentRouteKey}\r\n            userAuthority={userAuthority}\r\n            direction={direction}\r\n        />\r\n    )\r\n\r\n    return (\r\n        <>\r\n            {larger.md && (\r\n                <div\r\n                    style={\r\n                        sideNavCollapse ? sideNavCollapseStyle : sideNavStyle\r\n                    }\r\n                    className={classNames(\r\n                        'side-nav',\r\n                        sideNavColor(),\r\n                        !sideNavCollapse && 'side-nav-expand'\r\n                    )}\r\n                >\r\n                    <div className=\"side-nav-header\">\r\n                        {/* <Logo\r\n                            mode={logoMode()}\r\n                            type={sideNavCollapse ? 'streamline' : 'full'}\r\n                            gutter={\r\n                                sideNavCollapse\r\n                                    ? SIDE_NAV_CONTENT_GUTTER\r\n                                    : LOGO_X_GUTTER\r\n                            }\r\n                        /> */}\r\n                        <h3\r\n                            style={{\r\n                                marginLeft: 20,\r\n                                paddingTop: 20,\r\n                                paddingBottom: 20,\r\n                            }}\r\n                        >\r\n                            University A\r\n                        </h3>\r\n                    </div>\r\n                    {sideNavCollapse ? (\r\n                        menuContent\r\n                    ) : (\r\n                        <div className=\"side-nav-content\">\r\n                            <ScrollBar autoHide direction={direction}>\r\n                                {menuContent}\r\n                            </ScrollBar>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nSideNav.propTypes = {\r\n    themed: PropTypes.bool,\r\n    darkMode: PropTypes.bool,\r\n    themeColor: PropTypes.string,\r\n}\r\n\r\nSideNav.defaultProps = {\r\n    themed: false,\r\n    darkMode: false,\r\n    themeColor: '',\r\n}\r\n\r\nexport default SideNav\r\n","import React from 'react'\r\nimport withHeaderItem from 'utils/hoc/withHeaderItem'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setSideNavCollapse } from 'store/theme/themeSlice'\r\nimport useResponsive from 'utils/hooks/useResponsive'\r\nimport { NavToggle } from 'components/shared'\r\n\r\nexport const SideNavToggle = ({ className }) => {\r\n    const sideNavCollapse = useSelector(\r\n        (state) => state.theme.layout.sideNavCollapse\r\n    )\r\n    const dispatch = useDispatch()\r\n\r\n    const { larger } = useResponsive()\r\n\r\n    const onCollapse = () => {\r\n        dispatch(setSideNavCollapse(!sideNavCollapse))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {larger.md && (\r\n                <div className={className} onClick={onCollapse}>\r\n                    <NavToggle className=\"text-2xl\" toggled={sideNavCollapse} />\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withHeaderItem(SideNavToggle)\r\n","import React from 'react'\r\nimport { Avatar, Dropdown } from 'components/ui'\r\nimport withHeaderItem from 'utils/hoc/withHeaderItem'\r\nimport useAuth from 'utils/hooks/useAuth'\r\n// import { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport classNames from 'classnames'\r\nimport { HiOutlineUser, HiOutlineLogout } from 'react-icons/hi'\r\n\r\nconst dropdownItemList = []\r\n\r\nexport const UserDropdown = ({ className }) => {\r\n    // bind this\r\n    // const userInfo = useSelector((state) => state.auth.user)\r\n\r\n    const { signOut } = useAuth()\r\n\r\n    const UserAvatar = (\r\n        <div className={classNames(className, 'flex items-center gap-2')}>\r\n            <Avatar size={32} shape=\"circle\" icon={<HiOutlineUser />} />\r\n            <div className=\"hidden md:block\">\r\n                <div className=\"text-xs capitalize\">admin</div>\r\n                <div className=\"font-bold\">User01</div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <Dropdown\r\n                menuStyle={{ minWidth: 240 }}\r\n                renderTitle={UserAvatar}\r\n                placement=\"bottom-end\"\r\n            >\r\n                <Dropdown.Item variant=\"header\">\r\n                    <div className=\"py-2 px-3 flex items-center gap-2\">\r\n                        <Avatar shape=\"circle\" icon={<HiOutlineUser />} />\r\n                        <div>\r\n                            <div className=\"font-bold text-gray-900 dark:text-gray-100\">\r\n                                User01\r\n                            </div>\r\n                            <div className=\"text-xs\">user01@mail.com</div>\r\n                        </div>\r\n                    </div>\r\n                </Dropdown.Item>\r\n                <Dropdown.Item variant=\"divider\" />\r\n                {dropdownItemList.map((item) => (\r\n                    <Dropdown.Item\r\n                        key={item.label}\r\n                        eventKey={item.label}\r\n                        className=\"mb-1 px-0\"\r\n                    >\r\n                        <Link \r\n                            className=\"flex h-full w-full px-2\" \r\n                            to={item.path}\r\n                        >\r\n                            <span className=\"flex gap-2 items-center w-full\">\r\n                                <span className=\"text-xl opacity-50\">\r\n                                    {item.icon}\r\n                                </span>\r\n                                <span>{item.label}</span>\r\n                            </span>\r\n                        </Link>\r\n                    </Dropdown.Item>\r\n                ))}\r\n                {/* <Dropdown.Item variant=\"divider\" /> */}\r\n                <Dropdown.Item\r\n                    onClick={signOut}\r\n                    eventKey=\"Sign Out\"\r\n                    className=\"gap-2\"\r\n                >\r\n                    <span className=\"text-xl opacity-50\">\r\n                        <HiOutlineLogout />\r\n                    </span>\r\n                    <span>Sign Out</span>\r\n                </Dropdown.Item>\r\n            </Dropdown>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withHeaderItem(UserDropdown)\r\n","import React from 'react'\r\nimport navigationIcon from 'configs/navigation-icon.config'\r\n\r\nexport const Icon = ({ component: Component }) => {\r\n    return (\r\n        <>\r\n            <Component />\r\n        </>\r\n    )\r\n}\r\n\r\nconst VerticalMenuIcon = ({ icon, gutter }) => {\r\n    if (typeof icon !== 'string' && !icon) {\r\n        return <></>\r\n    }\r\n\r\n    return (\r\n        <span className={`text-2xl ${gutter ? 'ltr:mr-2 rtl:ml-2' : ''}`}>\r\n            {navigationIcon[icon]}\r\n        </span>\r\n    )\r\n}\r\n\r\nVerticalMenuIcon.defaultProps = {\r\n    gutter: true,\r\n}\r\n\r\nexport default VerticalMenuIcon\r\n","import React from 'react'\r\nimport { Menu, Tooltip } from 'components/ui'\r\nimport VerticalMenuIcon from './VerticalMenuIcon'\r\nimport { Link } from 'react-router-dom'\r\nimport { Trans, useTranslation } from 'react-i18next'\r\nimport { AuthorityCheck } from 'components/shared'\r\n\r\nconst { MenuItem } = Menu\r\n\r\nconst CollapsedItem = ({ title, translateKey, children, direction }) => {\r\n    const { t } = useTranslation()\r\n\r\n    return (\r\n        <Tooltip\r\n            title={t(translateKey) || title}\r\n            placement={direction === 'rtl' ? 'left' : 'right'}\r\n        >\r\n            {children}\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nconst DefaultItem = (props) => {\r\n    const { nav, onLinkClick, sideCollapsed, userAuthority } = props\r\n\r\n    return (\r\n        <AuthorityCheck userAuthority={userAuthority} authority={nav.authority}>\r\n            <MenuItem key={nav.key} eventKey={nav.key} className=\"mb-2\">\r\n                <Link\r\n                    to={nav.path}\r\n                    onClick={() =>\r\n                        onLinkClick?.({\r\n                            key: nav.key,\r\n                            title: nav.title,\r\n                            path: nav.path,\r\n                        })\r\n                    }\r\n                    className=\"flex items-center h-full w-full\"\r\n                >\r\n                    <VerticalMenuIcon icon={nav.icon} />\r\n                    {!sideCollapsed && (\r\n                        <span>\r\n                            <Trans\r\n                                i18nKey={nav.translateKey}\r\n                                defaults={nav.title}\r\n                            />\r\n                        </span>\r\n                    )}\r\n                </Link>\r\n            </MenuItem>\r\n        </AuthorityCheck>\r\n    )\r\n}\r\n\r\nconst VerticalSingleMenuItem = ({\r\n    nav,\r\n    onLinkClick,\r\n    sideCollapsed,\r\n    userAuthority,\r\n    direction,\r\n}) => {\r\n    return (\r\n        <AuthorityCheck userAuthority={userAuthority} authority={nav.authority}>\r\n            {sideCollapsed ? (\r\n                <CollapsedItem\r\n                    title={nav.title}\r\n                    translateKey={nav.translateKey}\r\n                    direction={direction}\r\n                >\r\n                    <DefaultItem\r\n                        nav={nav}\r\n                        sideCollapsed={sideCollapsed}\r\n                        onLinkClick={onLinkClick}\r\n                        userAuthority={userAuthority}\r\n                    />\r\n                </CollapsedItem>\r\n            ) : (\r\n                <DefaultItem\r\n                    nav={nav}\r\n                    sideCollapsed={sideCollapsed}\r\n                    onLinkClick={onLinkClick}\r\n                    userAuthority={userAuthority}\r\n                />\r\n            )}\r\n        </AuthorityCheck>\r\n    )\r\n}\r\n\r\nexport default VerticalSingleMenuItem\r\n","import React from 'react'\r\nimport { Menu, Dropdown } from 'components/ui'\r\nimport { Link } from 'react-router-dom'\r\nimport VerticalMenuIcon from './VerticalMenuIcon'\r\nimport { Trans } from 'react-i18next'\r\nimport { AuthorityCheck } from 'components/shared'\r\n\r\nconst { MenuItem, MenuCollapse } = Menu\r\n\r\nconst DefaultItem = ({ nav, onLinkClick, userAuthority }) => {\r\n    return (\r\n        <AuthorityCheck userAuthority={userAuthority} authority={nav.authority}>\r\n            <MenuCollapse\r\n                label={\r\n                    <>\r\n                        <VerticalMenuIcon icon={nav.icon} />\r\n                        <span>\r\n                            <Trans\r\n                                i18nKey={nav.translateKey}\r\n                                defaults={nav.title}\r\n                            />\r\n                        </span>\r\n                    </>\r\n                }\r\n                key={nav.key}\r\n                eventKey={nav.key}\r\n                expanded={false}\r\n                className=\"mb-2\"\r\n            >\r\n                {nav.subMenu.map((subNav) => (\r\n                    <AuthorityCheck\r\n                        userAuthority={userAuthority}\r\n                        authority={subNav.authority}\r\n                        key={subNav.key}\r\n                    >\r\n                        <MenuItem eventKey={subNav.key}>\r\n                            {subNav.path ? (\r\n                                <Link\r\n                                    className=\"h-full w-full flex items-center\"\r\n                                    onClick={() =>\r\n                                        onLinkClick?.({\r\n                                            key: subNav.key,\r\n                                            title: subNav.title,\r\n                                            path: subNav.path,\r\n                                        })\r\n                                    }\r\n                                    to={subNav.path}\r\n                                >\r\n                                    <span>\r\n                                        <Trans\r\n                                            i18nKey={subNav.translateKey}\r\n                                            defaults={subNav.title}\r\n                                        />\r\n                                    </span>\r\n                                </Link>\r\n                            ) : (\r\n                                <span>\r\n                                    <Trans\r\n                                        i18nKey={subNav.translateKey}\r\n                                        defaults={subNav.title}\r\n                                    />\r\n                                </span>\r\n                            )}\r\n                        </MenuItem>\r\n                    </AuthorityCheck>\r\n                ))}\r\n            </MenuCollapse>\r\n        </AuthorityCheck>\r\n    )\r\n}\r\n\r\nconst CollapsedItem = ({ nav, onLinkClick, userAuthority, direction }) => {\r\n    const menuItem = (\r\n        <MenuItem key={nav.key} eventKey={nav.key} className=\"mb-2\">\r\n            <VerticalMenuIcon icon={nav.icon} />\r\n        </MenuItem>\r\n    )\r\n\r\n    return (\r\n        <AuthorityCheck userAuthority={userAuthority} authority={nav.authority}>\r\n            <Dropdown\r\n                trigger=\"hover\"\r\n                renderTitle={menuItem}\r\n                placement={\r\n                    direction === 'rtl' ? 'middle-end-top' : 'middle-start-top'\r\n                }\r\n            >\r\n                {nav.subMenu.map((subNav) => (\r\n                    <AuthorityCheck\r\n                        userAuthority={userAuthority}\r\n                        authority={subNav.authority}\r\n                        key={subNav.key}\r\n                    >\r\n                        <Dropdown.Item eventKey={subNav.key}>\r\n                            {subNav.path ? (\r\n                                <Link\r\n                                    className=\"h-full w-full flex items-center\"\r\n                                    onClick={() =>\r\n                                        onLinkClick?.({\r\n                                            key: subNav.key,\r\n                                            title: subNav.title,\r\n                                            path: subNav.path,\r\n                                        })\r\n                                    }\r\n                                    to={subNav.path}\r\n                                >\r\n                                    <span>\r\n                                        <Trans\r\n                                            i18nKey={subNav.translateKey}\r\n                                            defaults={subNav.title}\r\n                                        />\r\n                                    </span>\r\n                                </Link>\r\n                            ) : (\r\n                                <span>\r\n                                    <Trans\r\n                                        i18nKey={subNav.translateKey}\r\n                                        defaults={subNav.title}\r\n                                    />\r\n                                </span>\r\n                            )}\r\n                        </Dropdown.Item>\r\n                    </AuthorityCheck>\r\n                ))}\r\n            </Dropdown>\r\n        </AuthorityCheck>\r\n    )\r\n}\r\n\r\nconst VerticalCollapsedMenuItem = ({ sideCollapsed, ...rest }) => {\r\n    return sideCollapsed ? (\r\n        <CollapsedItem {...rest} />\r\n    ) : (\r\n        <DefaultItem {...rest} />\r\n    )\r\n}\r\n\r\nexport default VerticalCollapsedMenuItem\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Menu } from 'components/ui'\r\nimport { AuthorityCheck } from 'components/shared'\r\nimport VerticalSingleMenuItem from './VerticalSingleMenuItem'\r\nimport VerticalCollapsedMenuItem from './VerticalCollapsedMenuItem'\r\nimport { themeConfig } from 'configs/theme.config'\r\nimport {\r\n    NAV_ITEM_TYPE_TITLE,\r\n    NAV_ITEM_TYPE_COLLAPSE,\r\n    NAV_ITEM_TYPE_ITEM,\r\n} from 'constants/navigation.constant'\r\nimport useMenuActive from 'utils/hooks/useMenuActive'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst { MenuGroup } = Menu\r\n\r\nconst VerticalMenuContent = (props) => {\r\n    const {\r\n        navMode = themeConfig.navMode,\r\n        collapsed,\r\n        routeKey,\r\n        navigationTree = [],\r\n        userAuthority = [],\r\n        onMenuItemClick,\r\n        direction = themeConfig.direction,\r\n    } = props\r\n\r\n    const { t } = useTranslation()\r\n\r\n    const [defaulExpandKey, setDefaulExpandKey] = useState([])\r\n\r\n    const { activedRoute } = useMenuActive(navigationTree, routeKey)\r\n\r\n    useEffect(() => {\r\n        if (defaulExpandKey.length === 0 && activedRoute?.parentKey) {\r\n            setDefaulExpandKey([activedRoute?.parentKey])\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [activedRoute?.parentKey])\r\n\r\n    const handleLinkClick = () => {\r\n        onMenuItemClick?.()\r\n    }\r\n\r\n    const getNavItem = (nav) => {\r\n        if (nav.subMenu.length === 0 && nav.type === NAV_ITEM_TYPE_ITEM) {\r\n            return (\r\n                <VerticalSingleMenuItem\r\n                    key={nav.key}\r\n                    nav={nav}\r\n                    onLinkClick={handleLinkClick}\r\n                    sideCollapsed={collapsed}\r\n                    userAuthority={userAuthority}\r\n                    direction={direction}\r\n                />\r\n            )\r\n        }\r\n\r\n        if (nav.subMenu.length > 0 && nav.type === NAV_ITEM_TYPE_COLLAPSE) {\r\n            return (\r\n                <VerticalCollapsedMenuItem\r\n                    key={nav.key}\r\n                    nav={nav}\r\n                    onLinkClick={onMenuItemClick}\r\n                    sideCollapsed={collapsed}\r\n                    userAuthority={userAuthority}\r\n                    direction={direction}\r\n                />\r\n            )\r\n        }\r\n\r\n        if (nav.type === NAV_ITEM_TYPE_TITLE) {\r\n            if (nav.subMenu.length > 0) {\r\n                return (\r\n                    <AuthorityCheck\r\n                        key={nav.key}\r\n                        userAuthority={userAuthority}\r\n                        authority={nav.authority}\r\n                    >\r\n                        <MenuGroup label={t(nav.translateKey) || nav.title}>\r\n                            {nav.subMenu.map((subNav) =>\r\n                                subNav.subMenu.length > 0 ? (\r\n                                    <VerticalCollapsedMenuItem\r\n                                        key={subNav.key}\r\n                                        nav={subNav}\r\n                                        onLinkClick={onMenuItemClick}\r\n                                        sideCollapsed={collapsed}\r\n                                        userAuthority={userAuthority}\r\n                                        direction={direction}\r\n                                    />\r\n                                ) : (\r\n                                    <VerticalSingleMenuItem\r\n                                        key={subNav.key}\r\n                                        nav={subNav}\r\n                                        onLinkClick={onMenuItemClick}\r\n                                        sideCollapsed={collapsed}\r\n                                        userAuthority={userAuthority}\r\n                                        direction={direction}\r\n                                    />\r\n                                )\r\n                            )}\r\n                        </MenuGroup>\r\n                    </AuthorityCheck>\r\n                )\r\n            } else {\r\n                ;<MenuGroup label={nav.title} />\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Menu\r\n            className=\"px-4 pb-4\"\r\n            variant={navMode}\r\n            sideCollapsed={collapsed}\r\n            defaultActiveKeys={activedRoute?.key ? [activedRoute.key] : []}\r\n            defaultExpandedKeys={defaulExpandKey}\r\n        >\r\n            {navigationTree.map((nav) => getNavItem(nav))}\r\n        </Menu>\r\n    )\r\n}\r\n\r\nVerticalMenuContent.propTypes = {\r\n    navMode: PropTypes.oneOf(['light', 'dark', 'themed', 'transparent']),\r\n    collapsed: PropTypes.bool,\r\n    routeKey: PropTypes.string,\r\n    navigationTree: PropTypes.array,\r\n    userAuthority: PropTypes.array,\r\n    direction: PropTypes.oneOf(['rtl', 'ltr']),\r\n}\r\n\r\nexport default VerticalMenuContent\r\n","import React from 'react'\r\nimport {\r\n    HiOutlineColorSwatch,\r\n    HiOutlineDesktopComputer,\r\n    HiOutlineTemplate,\r\n    HiOutlineViewGridAdd,\r\n    HiOutlineHome,\r\n} from 'react-icons/hi'\r\n\r\nconst navigationIcon = {\r\n    home: <HiOutlineHome />,\r\n    singleMenu: <HiOutlineViewGridAdd />,\r\n    collapseMenu: <HiOutlineTemplate />,\r\n    groupSingleMenu: <HiOutlineDesktopComputer />,\r\n    groupCollapseMenu: <HiOutlineColorSwatch />,\r\n}\r\n\r\nexport default navigationIcon\r\n","import {\r\n    NAV_ITEM_TYPE_TITLE,\r\n    NAV_ITEM_TYPE_COLLAPSE,\r\n    NAV_ITEM_TYPE_ITEM,\r\n} from 'constants/navigation.constant'\r\n\r\nconst navigationConfig = [\r\n    {\r\n        key: 'home',\r\n        path: '/home',\r\n        title: 'Transcripts',\r\n        translateKey: 'nav.transcripts',\r\n        icon: 'singleMenu',\r\n        type: NAV_ITEM_TYPE_ITEM,\r\n        authority: [],\r\n        subMenu: [],\r\n    },\r\n    /** Example purpose only, please remove */\r\n    // {\r\n    //     key: 'singleMenuItem',\r\n    //     path: '/single-menu-view',\r\n    //     title: 'Single menu item',\r\n    //     translateKey: 'nav.singleMenuItem',\r\n    //     icon: 'singleMenu',\r\n    //     type: NAV_ITEM_TYPE_ITEM,\r\n    //     authority: [],\r\n    //     subMenu: [],\r\n    // },\r\n    // {\r\n    //     key: 'collapseMenu',\r\n    //     path: '',\r\n    //     title: 'Collapse Menu',\r\n    //     translateKey: 'nav.collapseMenu.collapseMenu',\r\n    //     icon: 'collapseMenu',\r\n    //     type: NAV_ITEM_TYPE_COLLAPSE,\r\n    //     authority: [],\r\n    //     subMenu: [\r\n    //         {\r\n    //             key: 'collapseMenu.item1',\r\n    //             path: '/collapse-menu-item-view-1',\r\n    //             title: 'Collapse menu item 1',\r\n    //             translateKey: 'nav.collapseMenu.item1',\r\n    //             icon: '',\r\n    //             type: NAV_ITEM_TYPE_ITEM,\r\n    //             authority: [],\r\n    //             subMenu: [],\r\n    //         },\r\n    //         {\r\n    //             key: 'collapseMenu.item2',\r\n    //             path: '/collapse-menu-item-view-2',\r\n    //             title: 'Collapse menu item 2',\r\n    //             translateKey: 'nav.collapseMenu.item2',\r\n    //             icon: '',\r\n    //             type: NAV_ITEM_TYPE_ITEM,\r\n    //             authority: [],\r\n    //             subMenu: [],\r\n    //         },\r\n    //     ],\r\n    // },\r\n    // {\r\n    //     key: 'groupMenu',\r\n    //     path: '',\r\n    //     title: 'Group Menu',\r\n    //     translateKey: 'nav.groupMenu.groupMenu',\r\n    //     icon: '',\r\n    //     type: NAV_ITEM_TYPE_TITLE,\r\n    //     authority: [],\r\n    //     subMenu: [\r\n    //         {\r\n    //             key: 'groupMenu.single',\r\n    //             path: '/group-single-menu-item-view',\r\n    //             title: 'Group single menu item',\r\n    //             translateKey: 'nav.groupMenu.single',\r\n    //             icon: 'groupSingleMenu',\r\n    //             type: NAV_ITEM_TYPE_ITEM,\r\n    //             authority: [],\r\n    //             subMenu: [],\r\n    //         },\r\n    //         {\r\n    //             key: 'groupMenu.collapse',\r\n    //             path: '',\r\n    //             title: 'Group collapse menu',\r\n    //             translateKey: 'nav.groupMenu.collapse.collapse',\r\n    //             icon: 'groupCollapseMenu',\r\n    //             type: NAV_ITEM_TYPE_COLLAPSE,\r\n    //             authority: [],\r\n    //             subMenu: [\r\n    //                 {\r\n    //                     key: 'groupMenu.collapse.item1',\r\n    //                     path: '/group-collapse-menu-item-view-1',\r\n    //                     title: 'Menu item 1',\r\n    //                     translateKey: 'nav.groupMenu.collapse.item1',\r\n    //                     icon: '',\r\n    //                     type: NAV_ITEM_TYPE_ITEM,\r\n    //                     authority: [],\r\n    //                     subMenu: [],\r\n    //                 },\r\n    //                 {\r\n    //                     key: 'groupMenu.collapse.item2',\r\n    //                     path: '/group-collapse-menu-item-view-2',\r\n    //                     title: 'Menu item 2',\r\n    //                     translateKey: 'nav.groupMenu.collapse.item2',\r\n    //                     icon: '',\r\n    //                     type: NAV_ITEM_TYPE_ITEM,\r\n    //                     authority: [],\r\n    //                     subMenu: [],\r\n    //                 },\r\n    //             ],\r\n    //         },\r\n    //     ],\r\n    // },\r\n]\r\n\r\nexport default navigationConfig\r\n","export const NAV_ITEM_TYPE_TITLE = 'title'\r\nexport const NAV_ITEM_TYPE_COLLAPSE = 'collapse'\r\nexport const NAV_ITEM_TYPE_ITEM = 'item'\r\n","import { useMemo } from 'react'\r\nimport isPlainObject from 'lodash/isPlainObject'\r\n\r\nconst getRouteInfo = (navTree, key) => {\r\n    if (navTree.key === key) {\r\n        return navTree\r\n    }\r\n    let activedRoute\r\n    let isIncludeActivedRoute = false\r\n    for (let p in navTree) {\r\n        if (\r\n            p !== 'icon' &&\r\n            navTree.hasOwnProperty(p) &&\r\n            typeof navTree[p] === 'object'\r\n        ) {\r\n            if (isPlainObject(navTree[p]) && navTree[p].subMenu.length > 0) {\r\n                if (navTree[p].subMenu.some((el) => el.key === key)) {\r\n                    isIncludeActivedRoute = true\r\n                }\r\n            }\r\n\r\n            activedRoute = getRouteInfo(navTree[p], key)\r\n\r\n            if (activedRoute) {\r\n                if (isIncludeActivedRoute) {\r\n                    activedRoute.parentKey = navTree[p].key\r\n                }\r\n\r\n                return activedRoute\r\n            }\r\n        }\r\n    }\r\n    return activedRoute\r\n}\r\n\r\nconst findNestedRoute = (navTree, key) => {\r\n    let found = navTree.find((node) => {\r\n        return node.key === key\r\n    })\r\n    if (found) {\r\n        return true\r\n    }\r\n    return navTree.some((c) => findNestedRoute(c.subMenu, key))\r\n}\r\n\r\nconst getTopRouteKey = (navTree, key) => {\r\n    let foundNav = {}\r\n    navTree.forEach((nav) => {\r\n        if (findNestedRoute([nav], key)) {\r\n            foundNav = nav\r\n        }\r\n    })\r\n    return foundNav\r\n}\r\n\r\nfunction useMenuActive(navTree, key) {\r\n    const activedRoute = useMemo(() => {\r\n        const route = getRouteInfo(navTree, key)\r\n        return route\r\n    }, [navTree, key])\r\n\r\n    const includedRouteTree = useMemo(() => {\r\n        const included = getTopRouteKey(navTree, key)\r\n        return included\r\n    }, [navTree, key])\r\n\r\n    return { activedRoute, includedRouteTree }\r\n}\r\n\r\nexport default useMenuActive\r\n","import { useEffect, useState } from 'react'\r\nimport { theme } from 'twin.macro'\r\n\r\nconst twBreakpoint = theme`screens`\r\n\r\nconst breakpointInt = (str = '') => {\r\n    return parseInt(str.replace('px', ''))\r\n}\r\n\r\nconst breakpoint = {\r\n    '2xl': breakpointInt(twBreakpoint['2xl']), // 1536\r\n    xl: breakpointInt(twBreakpoint.xl), // 1280\r\n    lg: breakpointInt(twBreakpoint.lg), // 1024\r\n    md: breakpointInt(twBreakpoint.md), // 768\r\n    sm: breakpointInt(twBreakpoint.sm), // 640\r\n    xs: breakpointInt(twBreakpoint.xs), // 576\r\n}\r\n\r\nconst useResponsive = () => {\r\n    const getAllSizes = (comparator = 'smaller') => {\r\n        const currentWindowWidth = window.innerWidth\r\n        return Object.fromEntries(\r\n            Object.entries(breakpoint).map(([key, value]) => [\r\n                key,\r\n                comparator === 'larger'\r\n                    ? currentWindowWidth > value\r\n                    : currentWindowWidth < value,\r\n            ])\r\n        )\r\n    }\r\n\r\n    const getResponsiveState = () => {\r\n        const currentWindowWidth = window.innerWidth\r\n        return {\r\n            windowWidth: currentWindowWidth,\r\n            larger: getAllSizes('larger'),\r\n            smaller: getAllSizes('smaller'),\r\n        }\r\n    }\r\n\r\n    const [responsive, setResponsive] = useState(getResponsiveState())\r\n\r\n    const resizeHandler = () => {\r\n        const responsiveState = getResponsiveState()\r\n        setResponsive(responsiveState)\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', resizeHandler)\r\n        return () => window.removeEventListener('resize', resizeHandler)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [responsive.windowWidth])\r\n\r\n    return responsive\r\n}\r\n\r\nexport default useResponsive\r\n"],"names":["props","headerStart","headerEnd","headerMiddle","className","container","classNames","HEADER_HEIGHT_CLASS","Logo","type","mode","gutter","imgClass","style","logoWidth","width","src","alt","APP_NAME","defaultProps","VerticalMenuContent","lazy","MobileNavToggle","withHeaderItem","NavToggle","useState","isOpen","setIsOpen","onDrawerClose","e","themeColor","useSelector","state","theme","primaryColorLevel","navMode","direction","currentRouteKey","base","common","sideNavCollapse","layout","userAuthority","auth","user","authority","smaller","useResponsive","md","onClick","toggled","title","onClose","onRequestClose","bodyClass","NAV_MODE_THEMED","NAV_MODE_TRANSPARENT","placement","DIR_RTL","Suspense","fallback","collapsed","navigationTree","navigationConfig","routeKey","onMenuItemClick","sideNavStyle","SIDE_NAV_WIDTH","minWidth","sideNavCollapseStyle","SIDE_NAV_COLLAPSED_WIDTH","SideNav","larger","menuContent","marginLeft","paddingTop","paddingBottom","autoHide","themed","darkMode","dispatch","useDispatch","setSideNavCollapse","dropdownItemList","signOut","useAuth","UserAvatar","size","shape","icon","menuStyle","renderTitle","variant","map","item","eventKey","label","to","path","VerticalMenuIcon","navigationIcon","MenuItem","Menu","CollapsedItem","translateKey","children","t","useTranslation","DefaultItem","nav","onLinkClick","sideCollapsed","key","Trans","i18nKey","defaults","MenuCollapse","expanded","subMenu","subNav","menuItem","trigger","rest","MenuGroup","themeConfig","defaulExpandKey","setDefaulExpandKey","activedRoute","useMenuActive","useEffect","length","parentKey","handleLinkClick","defaultActiveKeys","defaultExpandedKeys","NAV_ITEM_TYPE_ITEM","NAV_ITEM_TYPE_COLLAPSE","NAV_ITEM_TYPE_TITLE","getNavItem","home","singleMenu","collapseMenu","groupSingleMenu","groupCollapseMenu","getRouteInfo","navTree","isIncludeActivedRoute","p","hasOwnProperty","isPlainObject","some","el","findNestedRoute","find","node","c","useMemo","includedRouteTree","included","foundNav","forEach","getTopRouteKey","twBreakpoint","breakpointInt","str","parseInt","replace","breakpoint","xl","lg","sm","xs","getAllSizes","comparator","currentWindowWidth","window","innerWidth","Object","fromEntries","entries","value","getResponsiveState","windowWidth","responsive","setResponsive","resizeHandler","responsiveState","addEventListener","removeEventListener"],"sourceRoot":""}