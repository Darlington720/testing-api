{"version":3,"file":"static/js/56.e37e4f6c.chunk.js","mappings":"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","sources":["views/transcripts/store/stateSlice.js","views/transcripts/components/ActionBar.js","services/ProjectService.js","views/transcripts/store/dataSlice.js","views/transcripts/components/NewProjectForm.js","views/transcripts/components/NewProjectDialog.js","views/transcripts/store/index.js","services/CrmService.js","views/transcripts/customer-store/dataSlice.js","views/transcripts/customer-store/stateSlice.js","views/transcripts/index.js","../node_modules/lodash/_baseTrim.js","../node_modules/lodash/_trimmedEndIndex.js","../node_modules/lodash/debounce.js","../node_modules/lodash/now.js","../node_modules/lodash/toNumber.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst stateSlice = createSlice({\r\n    name: 'projectList/state',\r\n    initialState: {\r\n        view: 'grid',\r\n        query: {\r\n            order: 'asc',\r\n            search: '',\r\n        },\r\n        newProjectDialog: false,\r\n    },\r\n    reducers: {\r\n        toggleView: (state, action) => {\r\n            state.view = action.payload\r\n        },\r\n        toggleSort: (state, action) => {\r\n            state.query.order = action.payload\r\n        },\r\n        setSearch: (state, action) => {\r\n            state.query.search = action.payload\r\n        },\r\n        toggleNewProjectDialog: (state, action) => {\r\n            state.newProjectDialog = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const { toggleView, toggleSort, toggleNewProjectDialog, setSearch } =\r\n    stateSlice.actions\r\n\r\nexport default stateSlice.reducer\r\n","import React, { useRef } from 'react'\r\nimport { Button, Input, Tooltip } from 'components/ui'\r\nimport {\r\n    HiOutlinePlusCircle,\r\n    HiOutlineSearch,\r\n    HiOutlineViewGrid,\r\n    HiOutlineViewList,\r\n    HiOutlineSortAscending,\r\n    HiOutlineSortDescending,\r\n} from 'react-icons/hi'\r\nimport {\r\n    toggleView,\r\n    toggleSort,\r\n    setSearch,\r\n    toggleNewProjectDialog,\r\n} from '../store/stateSlice'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport debounce from 'lodash/debounce'\r\n\r\nconst ActionBar = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const inputRef = useRef()\r\n\r\n    const view = useSelector((state) => state.projectList.state.view)\r\n\r\n    const { sort } = useSelector((state) => state.projectList.state.query)\r\n\r\n    const onViewToggle = () => {\r\n        dispatch(toggleView(view === 'grid' ? 'list' : 'grid'))\r\n    }\r\n\r\n    const onToggleSort = () => {\r\n        dispatch(toggleSort(sort === 'asc' ? 'desc' : 'asc'))\r\n    }\r\n\r\n    const onAddNewProject = () => {\r\n        dispatch(toggleNewProjectDialog(true))\r\n    }\r\n\r\n    const debounceFn = debounce(handleDebounceFn, 500)\r\n\r\n    function handleDebounceFn(val) {\r\n        dispatch(setSearch(val))\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        debounceFn(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"lg:flex items-center justify-between mb-4\">\r\n            <h3 className=\"mb-4 lg:mb-0\">Transcripts</h3>\r\n            <div className=\"flex flex-col md:flex-row md:items-center gap-1\">\r\n                <Input\r\n                    ref={inputRef}\r\n                    size=\"sm\"\r\n                    placeholder=\"Search\"\r\n                    prefix={<HiOutlineSearch className=\"text-lg\" />}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <Button\r\n                    size=\"sm\"\r\n                    variant=\"twoTone\"\r\n                    icon={<HiOutlinePlusCircle />}\r\n                    onClick={onAddNewProject}\r\n                >\r\n                    New Transcript\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActionBar\r\n","import ApiService from './ApiService'\r\n\r\nexport async function apiGetProjectDashboardData(params) {\r\n    return ApiService.fetchData({\r\n        url: '/project/dashboard',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiGetProjectList(data) {\r\n    return ApiService.fetchData({\r\n        url: '/project/list',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiPutProjectList(data) {\r\n    return ApiService.fetchData({\r\n        url: '/project/list/add',\r\n        method: 'put',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetScrumBoards() {\r\n    return ApiService.fetchData({\r\n        url: '/project/scrum-board/boards',\r\n        method: 'post',\r\n    })\r\n}\r\n\r\nexport async function apiGetScrumBoardtMembers() {\r\n    return ApiService.fetchData({\r\n        url: '/project/scrum-board/members',\r\n        method: 'post',\r\n    })\r\n}\r\n\r\nexport async function apiGetScrumBoardtTicketDetail(params) {\r\n    return ApiService.fetchData({\r\n        url: '/project/scrum-board/tickets/detail',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport {\r\n    apiGetProjectList,\r\n    apiGetScrumBoardtMembers,\r\n    apiPutProjectList,\r\n} from 'services/ProjectService'\r\n\r\nexport const getList = createAsyncThunk('projectList/getList', async (data) => {\r\n    const response = await apiGetProjectList(data)\r\n    return response.data\r\n})\r\n\r\nexport const getMembers = createAsyncThunk(\r\n    'projectList/getMembers',\r\n    async () => {\r\n        const response = await apiGetScrumBoardtMembers()\r\n        const data = response.data.map((item) => ({\r\n            value: item.id,\r\n            label: item.name,\r\n            img: item.img,\r\n        }))\r\n        return data\r\n    }\r\n)\r\n\r\nexport const putProject = createAsyncThunk(\r\n    'projectList/putProject',\r\n    async (data) => {\r\n        const response = await apiPutProjectList(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nconst dataSlice = createSlice({\r\n    name: 'projectList/data',\r\n    initialState: {\r\n        loading: false,\r\n        projectList: [],\r\n        allMembers: [],\r\n    },\r\n    reducers: {},\r\n    extraReducers: {\r\n        [getList.fulfilled]: (state, action) => {\r\n            state.projectList = action.payload\r\n            state.loading = false\r\n        },\r\n        [getList.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getMembers.fulfilled]: (state, action) => {\r\n            state.allMembers = action.payload\r\n        },\r\n        [putProject.fulfilled]: (state, action) => {\r\n            state.projectList = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport default dataSlice.reducer\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Input,\r\n    Button,\r\n    Select,\r\n    Avatar,\r\n    FormItem,\r\n    FormContainer,\r\n    hooks,\r\n} from 'components/ui'\r\nimport NewTaskField from './NewTaskField'\r\nimport { Field, Form, Formik } from 'formik'\r\nimport { HiCheck } from 'react-icons/hi'\r\nimport { components } from 'react-select'\r\nimport { getMembers, putProject } from '../store/dataSlice'\r\nimport { Upload } from 'components/ui'\r\nimport { toggleNewProjectDialog } from '../store/stateSlice'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\nimport * as Yup from 'yup'\r\n\r\nconst { MultiValueLabel } = components\r\n\r\nconst { useUniqueId } = hooks\r\n\r\nconst CustomSelectOption = ({ innerProps, label, data, isSelected }) => {\r\n    return (\r\n        <div\r\n            className={`flex items-center justify-between p-2 ${\r\n                isSelected\r\n                    ? 'bg-gray-100 dark:bg-gray-500'\r\n                    : 'hover:bg-gray-50 dark:hover:bg-gray-600'\r\n            }`}\r\n            {...innerProps}\r\n        >\r\n            <div className=\"flex items-center\">\r\n                <Avatar shape=\"circle\" size={20} src={data.img} />\r\n                <span className=\"ml-2 rtl:mr-2\">{label}</span>\r\n            </div>\r\n            {isSelected && <HiCheck className=\"text-emerald-500 text-xl\" />}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CustomControlMulti = ({ children, data, ...props }) => {\r\n    const { img } = data\r\n    return (\r\n        <MultiValueLabel {...props}>\r\n            <div className=\"inline-flex items-center\">\r\n                <Avatar\r\n                    className=\"mr-2 rtl:ml-2\"\r\n                    shape=\"circle\"\r\n                    size={15}\r\n                    src={img}\r\n                />\r\n                {children}\r\n            </div>\r\n        </MultiValueLabel>\r\n    )\r\n}\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    title: Yup.string().min(3, 'Too Short!').required('Title required'),\r\n    content: Yup.string().required('Title required'),\r\n    assignees: Yup.array().min(1, 'Assignee required'),\r\n    rememberMe: Yup.bool(),\r\n})\r\n\r\nconst NewProjectForm = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const members = useSelector((state) => state.projectList.data.allMembers)\r\n\r\n    const newId = useUniqueId('project-')\r\n\r\n    const [taskCount, setTaskCount] = useState({})\r\n\r\n    useEffect(() => {\r\n        dispatch(getMembers())\r\n    }, [dispatch])\r\n\r\n    const handleAddNewTask = (count) => {\r\n        setTaskCount(count)\r\n    }\r\n\r\n    const onSubmit = (formValue, setSubmitting) => {\r\n        setSubmitting(true)\r\n\r\n        const { title, content, assignees } = formValue\r\n\r\n        const { totalTask, completedTask } = taskCount\r\n\r\n        const member = cloneDeep(assignees).map((assignee) => {\r\n            assignee.name = assignee.label\r\n            return assignee\r\n        })\r\n\r\n        const values = {\r\n            id: newId,\r\n            name: title,\r\n            desc: content,\r\n            totalTask,\r\n            completedTask,\r\n            progression: (completedTask / totalTask) * 100 || 0,\r\n            member,\r\n        }\r\n        dispatch(putProject(values))\r\n        dispatch(toggleNewProjectDialog(false))\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                title: '',\r\n                content: '',\r\n                assignees: [],\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values, { resetForm, setSubmitting }) => {\r\n                onSubmit(values, setSubmitting)\r\n            }}\r\n        >\r\n            {({ touched, errors, values, resetForm }) => (\r\n                <Form>\r\n                    <FormContainer>\r\n                        <FormItem\r\n                            label=\"Student Name\"\r\n                            invalid={errors.title && touched.title}\r\n                            errorMessage={errors.title}\r\n                        >\r\n                            <Field\r\n                                type=\"text\"\r\n                                autoComplete=\"off\"\r\n                                name=\"title\"\r\n                                placeholder=\"Enter Student Name\"\r\n                                component={Input}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem\r\n                            label=\"Student No\"\r\n                            invalid={errors.title && touched.title}\r\n                            errorMessage={errors.title}\r\n                        >\r\n                            <Field\r\n                                type=\"text\"\r\n                                autoComplete=\"off\"\r\n                                name=\"title\"\r\n                                placeholder=\"Enter Student No\"\r\n                                component={Input}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem\r\n                            label=\"Award\"\r\n                            invalid={errors.assignees && touched.assignees}\r\n                            errorMessage={errors.assignees}\r\n                        >\r\n                            <Field name=\"assignees\">\r\n                                {({ field, form }) => (\r\n                                    <Select\r\n                                        isMulti\r\n                                        className=\"min-w-[120px]\"\r\n                                        components={{\r\n                                            Option: CustomSelectOption,\r\n                                            MultiValueLabel: CustomControlMulti,\r\n                                        }}\r\n                                        field={field}\r\n                                        form={form}\r\n                                        options={members}\r\n                                        value={values.assignees}\r\n                                        onChange={(member) => {\r\n                                            form.setFieldValue(\r\n                                                field.name,\r\n                                                member\r\n                                            )\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                            </Field>\r\n                        </FormItem>\r\n                        <FormItem\r\n                            label=\"Transcript\"\r\n                            invalid={errors.content && touched.content}\r\n                            errorMessage={errors.content}\r\n                        >\r\n                            {/* <Field\r\n                                textArea\r\n                                type=\"text\"\r\n                                autoComplete=\"off\"\r\n                                name=\"content\"\r\n                                placeholder=\"Enter content\"\r\n                                component={Input}\r\n                            /> */}\r\n                            <Upload draggable />\r\n                        </FormItem>\r\n                        {/* <NewTaskField onAddNewTask={handleAddNewTask} /> */}\r\n                        <Button block variant=\"solid\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </FormContainer>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default NewProjectForm\r\n","import React from 'react'\r\nimport { Dialog } from 'components/ui'\r\nimport NewProjectForm from './NewProjectForm'\r\nimport { toggleNewProjectDialog } from '../store/stateSlice'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst NewProjectDialog = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const newProjectDialog = useSelector(\r\n        (state) => state.projectList.state.newProjectDialog\r\n    )\r\n\r\n    const onDialogClose = () => {\r\n        dispatch(toggleNewProjectDialog(false))\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            isOpen={newProjectDialog}\r\n            onClose={onDialogClose}\r\n            onRequestClose={onDialogClose}\r\n        >\r\n            <h4>Add new transcript</h4>\r\n            <div className=\"mt-4\">\r\n                <NewProjectForm />\r\n            </div>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default NewProjectDialog\r\n","import { combineReducers } from '@reduxjs/toolkit'\r\nimport state from './stateSlice'\r\nimport data from './dataSlice'\r\n\r\nconst reducer = combineReducers({\r\n    state,\r\n    data,\r\n})\r\n\r\nexport default reducer\r\n","import ApiService from './ApiService'\r\n\r\nexport async function apiGetCrmDashboardData(data) {\r\n    return ApiService.fetchData({\r\n        url: '/crm/dashboard',\r\n        method: 'get',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetCrmCalendar() {\r\n    return ApiService.fetchData({\r\n        url: '/crm/calendar',\r\n        method: 'get',\r\n    })\r\n}\r\n\r\nexport async function apiGetCrmCustomers(data) {\r\n    return ApiService.fetchData({\r\n        url: '/crm/customers',\r\n        method: 'post',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetCrmCustomersStatistic(params) {\r\n    return ApiService.fetchData({\r\n        url: '/crm/customers-statistic',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apPutCrmCustomer(data) {\r\n    return ApiService.fetchData({\r\n        url: '/crm/customers',\r\n        method: 'put',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetCrmCustomerDetails(params) {\r\n    return ApiService.fetchData({\r\n        url: '/crm/customer-details',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiDeleteCrmCustomer(data) {\r\n    return ApiService.fetchData({\r\n        url: '/crm/customer/delete',\r\n        method: 'delete',\r\n        data,\r\n    })\r\n}\r\n\r\nexport async function apiGetCrmMails(params) {\r\n    return ApiService.fetchData({\r\n        url: '/crm/mails',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n\r\nexport async function apiGetCrmMail(params) {\r\n    return ApiService.fetchData({\r\n        url: '/crm/mail',\r\n        method: 'get',\r\n        params,\r\n    })\r\n}\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport {\r\n    apiGetCrmCustomers,\r\n    apPutCrmCustomer,\r\n    apiGetCrmCustomersStatistic,\r\n} from 'services/CrmService'\r\n\r\nexport const getCustomerStatistic = createAsyncThunk(\r\n    'crmCustomers/data/getCustomerStatistic',\r\n    async () => {\r\n        const response = await apiGetCrmCustomersStatistic()\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const getCustomers = createAsyncThunk(\r\n    'crmCustomers/data/getCustomers',\r\n    async (params) => {\r\n        const response = await apiGetCrmCustomers(params)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const putCustomer = createAsyncThunk(\r\n    'crmCustomers/data/putCustomer',\r\n    async (data) => {\r\n        const response = await apPutCrmCustomer(data)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const initialTableData = {\r\n    total: 0,\r\n    pageIndex: 1,\r\n    pageSize: 10,\r\n    query: '',\r\n    sort: {\r\n        order: '',\r\n        key: '',\r\n    },\r\n}\r\n\r\nexport const initialFilterData = {\r\n    status: '',\r\n}\r\n\r\nconst dataSlice = createSlice({\r\n    name: 'crmCustomers/data',\r\n    initialState: {\r\n        loading: false,\r\n        customerList: [],\r\n        statisticData: {},\r\n        tableData: initialTableData,\r\n        filterData: initialFilterData,\r\n    },\r\n    reducers: {\r\n        setTableData: (state, action) => {\r\n            state.tableData = action.payload\r\n        },\r\n        setCustomerList: (state, action) => {\r\n            state.customerList = action.payload\r\n        },\r\n        setFilterData: (state, action) => {\r\n            state.filterData = action.payload\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [getCustomers.fulfilled]: (state, action) => {\r\n            state.customerList = action.payload.data\r\n            state.tableData.total = action.payload.total\r\n            state.loading = false\r\n        },\r\n        [getCustomers.pending]: (state) => {\r\n            state.loading = true\r\n        },\r\n        [getCustomerStatistic.pending]: (state) => {\r\n            state.statisticLoading = true\r\n        },\r\n        [getCustomerStatistic.fulfilled]: (state, action) => {\r\n            state.statisticData = action.payload\r\n            state.statisticLoading = false\r\n        },\r\n    },\r\n})\r\n\r\nexport const { setTableData, setCustomerList, setFilterData } =\r\n    dataSlice.actions\r\n\r\nexport default dataSlice.reducer\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst stateSlice = createSlice({\r\n    name: 'crmCustomers/state',\r\n    initialState: {\r\n        drawerOpen: false,\r\n        selectedCustomer: {},\r\n    },\r\n    reducers: {\r\n        setSelectedCustomer: (state, action) => {\r\n            state.selectedCustomer = action.payload\r\n        },\r\n        setDrawerOpen: (state) => {\r\n            state.drawerOpen = true\r\n        },\r\n        setDrawerClose: (state) => {\r\n            state.drawerOpen = false\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    setSelectedCustomer,\r\n    setDrawerOpen,\r\n    setDrawerClose,\r\n} = stateSlice.actions\r\n\r\nexport default stateSlice.reducer\r\n","import React, { useEffect, useCallback, useMemo } from 'react'\r\nimport ActionBar from './components/ActionBar'\r\n// import { AdaptableCard } from 'components/shared'\r\n// import CustomersTable from './components/CustomersTable'\r\n// import CustomersTableTools from './components/CustomersTableTools'\r\nimport NewProjectDialog from './components/NewProjectDialog'\r\nimport { Container } from 'components/shared'\r\nimport reducer from './store'\r\nimport { injectReducer } from 'store/index'\r\n\r\nimport { Avatar, Badge } from 'components/ui'\r\nimport { DataTable } from 'components/shared'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getCustomers, setTableData } from './customer-store/dataSlice'\r\nimport { setSelectedCustomer, setDrawerOpen } from './customer-store/stateSlice'\r\nimport useThemeClass from 'utils/hooks/useThemeClass'\r\nimport { Link } from 'react-router-dom'\r\nimport dayjs from 'dayjs'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\n\r\ninjectReducer('projectList', reducer)\r\n\r\nconst statusColor = {\r\n    active: 'bg-emerald-500',\r\n    blocked: 'bg-red-500',\r\n}\r\n\r\nconst ActionColumn = ({ row }) => {\r\n    const { textTheme } = useThemeClass()\r\n    const dispatch = useDispatch()\r\n\r\n    const onEdit = () => {\r\n        dispatch(setDrawerOpen())\r\n        dispatch(setSelectedCustomer(row))\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={`${textTheme} cursor-pointer select-none font-semibold`}\r\n            onClick={onEdit}\r\n        >\r\n            Edit\r\n        </div>\r\n    )\r\n}\r\n\r\nconst NameColumn = ({ row }) => {\r\n    const { textTheme } = useThemeClass()\r\n\r\n    return (\r\n        <div className=\"flex items-center\">\r\n            <Avatar size={28} shape=\"circle\" src={row.img} />\r\n            <Link\r\n                className={`hover:${textTheme} ml-2 rtl:mr-2 font-semibold`}\r\n                to={`/app/crm/customer-details?id=${row.id}`}\r\n            >\r\n                {row.name}\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst columns = [\r\n    {\r\n        header: 'Student  Name',\r\n        accessorKey: 'name',\r\n        cell: (props) => {\r\n            const row = props.row.original\r\n            return <NameColumn row={row} />\r\n        },\r\n    },\r\n    {\r\n        header: 'Std Number',\r\n        accessorKey: 'stdno',\r\n    },\r\n    {\r\n        header: 'Award',\r\n        accessorKey: 'award',\r\n    },\r\n    {\r\n        header: 'Status',\r\n        accessorKey: 'status',\r\n        cell: (props) => {\r\n            const row = props.row.original\r\n            return (\r\n                <div className=\"flex items-center\">\r\n                    <Badge\r\n                        className={\r\n                            statusColor[row.status] == 'verified'\r\n                                ? 'active'\r\n                                : 'blocked'\r\n                        }\r\n                    />\r\n                    <span className=\"ml-2 rtl:mr-2 capitalize\">\r\n                        {row.status}\r\n                    </span>\r\n                </div>\r\n            )\r\n        },\r\n    },\r\n    {\r\n        header: 'Uploaded on',\r\n        accessorKey: 'lastOnline',\r\n        cell: (props) => {\r\n            const row = props.row.original\r\n            return <div className=\"flex items-center\">{row.uploaded_on}</div>\r\n        },\r\n    },\r\n    {\r\n        header: '',\r\n        id: 'action',\r\n        cell: (props) => <ActionColumn row={props.row.original} />,\r\n    },\r\n]\r\n\r\nconst ProjectList = () => {\r\n    const dispatch = useDispatch()\r\n    const data = [\r\n        {\r\n            id: 1,\r\n            name: 'MULINDE HAKIM',\r\n            stdno: '2300039393',\r\n            award: 'MSTC',\r\n            status: 'verified',\r\n            uploaded_on: '2023-03-04',\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'MUTYABA IBRAHIM',\r\n            stdno: '2200039844',\r\n            award: 'MSIST',\r\n            status: 'not_verified',\r\n            uploaded_on: '2023-03-04',\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'KYOMUGISHA JOAN',\r\n            stdno: '2300039493',\r\n            award: 'MSCHT',\r\n            status: 'verified',\r\n            uploaded_on: '2023-03-04',\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'JOHNDOE',\r\n            stdno: '2002020983',\r\n            award: 'MISRET',\r\n            status: 'not_verified',\r\n            uploaded_on: '2023-03-04',\r\n        },\r\n    ]\r\n    const loading = false\r\n    const filterData = []\r\n\r\n    const { pageIndex, pageSize, sort, query, total } = useSelector(\r\n        (state) => []\r\n    )\r\n\r\n    const fetchData = useCallback(() => {\r\n        dispatch(getCustomers({ pageIndex, pageSize, sort, query, filterData }))\r\n    }, [pageIndex, pageSize, sort, query, filterData, dispatch])\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [fetchData, pageIndex, pageSize, sort, filterData])\r\n\r\n    const tableData = useMemo(\r\n        () => ({ pageIndex, pageSize, sort, query, total }),\r\n        [pageIndex, pageSize, sort, query, total]\r\n    )\r\n\r\n    const onPaginationChange = (page) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageIndex = page\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSelectChange = (value) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.pageSize = Number(value)\r\n        newTableData.pageIndex = 1\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n\r\n    const onSort = (sort) => {\r\n        const newTableData = cloneDeep(tableData)\r\n        newTableData.sort = sort\r\n        dispatch(setTableData(newTableData))\r\n    }\r\n    return (\r\n        <Container className=\"h-full\">\r\n            <ActionBar />\r\n            {/* <ProjectListContent /> */}\r\n\r\n            {/* <AdaptableCard className=\"h-full\" bodyClass=\"h-full\">\r\n                <CustomersTableTools />\r\n                <CustomersTable />\r\n            </AdaptableCard> */}\r\n\r\n            <DataTable\r\n                columns={columns}\r\n                data={data}\r\n                skeletonAvatarColumns={[0]}\r\n                skeletonAvatarProps={{ width: 28, height: 28 }}\r\n                loading={loading}\r\n                pagingData={{ pageIndex, pageSize, sort, query, total }}\r\n                onPaginationChange={onPaginationChange}\r\n                onSelectChange={onSelectChange}\r\n                onSort={onSort}\r\n            />\r\n            <NewProjectDialog />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProjectList\r\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n"],"names":["stateSlice","createSlice","name","initialState","view","query","order","search","newProjectDialog","reducers","toggleView","state","action","payload","toggleSort","setSearch","toggleNewProjectDialog","actions","dispatch","useDispatch","inputRef","useRef","debounceFn","useSelector","projectList","sort","debounce","val","className","ref","size","placeholder","prefix","onChange","e","target","value","variant","icon","onClick","apiGetProjectList","data","ApiService","url","method","apiPutProjectList","apiGetScrumBoardtMembers","getList","createAsyncThunk","response","getMembers","map","item","id","label","img","putProject","loading","allMembers","extraReducers","fulfilled","pending","MultiValueLabel","components","useUniqueId","hooks","CustomSelectOption","innerProps","isSelected","shape","src","CustomControlMulti","children","props","validationSchema","Yup","title","min","required","content","assignees","rememberMe","members","newId","useState","taskCount","useEffect","initialValues","onSubmit","values","resetForm","formValue","setSubmitting","totalTask","completedTask","member","cloneDeep","assignee","desc","progression","touched","errors","invalid","errorMessage","type","autoComplete","component","Input","field","form","isMulti","Option","options","setFieldValue","draggable","block","onDialogClose","isOpen","onClose","onRequestClose","combineReducers","apiGetCrmCustomers","apiGetCrmCustomersStatistic","params","apPutCrmCustomer","getCustomerStatistic","getCustomers","dataSlice","customerList","statisticData","tableData","total","pageIndex","pageSize","key","filterData","status","setTableData","setCustomerList","setFilterData","statisticLoading","drawerOpen","selectedCustomer","setSelectedCustomer","setDrawerOpen","setDrawerClose","injectReducer","reducer","statusColor","active","blocked","ActionColumn","row","textTheme","useThemeClass","NameColumn","to","columns","header","accessorKey","cell","original","uploaded_on","fetchData","useCallback","useMemo","stdno","award","skeletonAvatarColumns","skeletonAvatarProps","width","height","pagingData","onPaginationChange","page","newTableData","onSelectChange","Number","onSort","trimmedEndIndex","require","reTrimStart","module","exports","string","slice","replace","reWhitespace","index","length","test","charAt","isObject","now","toNumber","nativeMax","Math","max","nativeMin","func","wait","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","arguments","this","clearTimeout","cancel","flush","root","Date","baseTrim","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary"],"sourceRoot":""}